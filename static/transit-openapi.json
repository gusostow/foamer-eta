{
  "openapi": "3.1.0",
  "info": {
    "title": "Transit API",
    "version": "3.0.0",
    "x-logo": {
      "url": "transit-logotype_iOS-dark.png"
    },
    "contact": {},
    "description": "API provided by data from transit.app"
  },
  "paths": {
    "/public/nearby_routes": {
      "get": {
        "operationId": "/public/nearby_routes",
        "description": "Returns routes around a location",
        "parameters": [
          {
            "$ref": "#/components/parameters/Latitude"
          },
          {
            "$ref": "#/components/parameters/Longitude"
          },
          {
            "in": "query",
            "name": "max_distance",
            "description": "Maximum radius of search from the request location (in meters)",
            "schema": {
              "type": "integer",
              "example": 1500,
              "default": 150,
              "maximum": 1500
            }
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "schema": {
              "type": "boolean",
              "default": true
            },
            "in": "query",
            "name": "should_update_realtime",
            "description": "Boolean telling the system if it should update real time or just return schedule information. "
          },
          {
            "in": "query",
            "name": "max_num_departures",
            "description": "Number of departures to return per stop",
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "in": "query",
            "name": "time",
            "description": "Optional epoch timestamp for getting routes at a specific time. If not provided, current time is used.",
            "schema": {
              "type": "integer",
              "example": 1641024000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of nearby routes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "routes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Route"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "routes": [
                        {
                          "compact_display_short_name": {
                            "boxed_text": "",
                            "elements": [
                              null,
                              "171",
                              null
                            ],
                            "route_name_redundancy": false
                          },
                          "fares": [
                            {
                              "fare_media_type": 1,
                              "price_min": {
                                "currency_code": "CAD",
                                "symbol": "$",
                                "text": "3,75$",
                                "value": 3.75
                              },
                              "price_max": {
                                "currency_code": "CAD",
                                "symbol": "$",
                                "text": "3,75$",
                                "value": 3.75
                              }
                            }
                          ],
                          "global_route_id": "STM:980",
                          "itineraries": [
                            {
                              "branch_code": "",
                              "closest_stop": {
                                "global_stop_id": "STM:88368",
                                "location_type": 0,
                                "parent_station_global_stop_id": null,
                                "route_type": 3,
                                "rt_stop_id": "54127",
                                "stop_code": "54127",
                                "stop_lat": 45.5561148059816,
                                "stop_lon": -73.66728568969893,
                                "stop_name": "Station Henri-Bourassa",
                                "wheelchair_boarding": 1
                              },
                              "direction_headsign": "Est",
                              "direction_id": 0,
                              "headsign": "Est",
                              "merged_headsign": "Est",
                              "schedule_items": []
                            },
                            {
                              "branch_code": "",
                              "closest_stop": {
                                "global_stop_id": "STM:88180",
                                "location_type": 0,
                                "parent_station_global_stop_id": null,
                                "route_type": 3,
                                "rt_stop_id": "54114",
                                "stop_code": "54114",
                                "stop_lat": 45.55550326815347,
                                "stop_lon": -73.66742058774925,
                                "stop_name": "Station Henri-Bourassa",
                                "wheelchair_boarding": 1
                              },
                              "direction_headsign": "Ouest",
                              "direction_id": 1,
                              "headsign": "Ouest",
                              "merged_headsign": "Ouest",
                              "schedule_items": [
                                {
                                  "departure_time": 1706734020,
                                  "is_cancelled": false,
                                  "is_real_time": true,
                                  "rt_trip_id": "274099525",
                                  "scheduled_departure_time": 1706734020,
                                  "trip_search_key": "STM:44434357:312:1:16",
                                  "wheelchair_accessible": 0
                                },
                                {
                                  "departure_time": 1706734920,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "rt_trip_id": "274099717",
                                  "scheduled_departure_time": 1706734920,
                                  "trip_search_key": "STM:44434357:312:1:17",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1706735820,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "rt_trip_id": "274099796",
                                  "scheduled_departure_time": 1706735820,
                                  "trip_search_key": "STM:44434357:312:1:18",
                                  "wheelchair_accessible": 1
                                }
                              ]
                            }
                          ],
                          "mode_name": "Bus",
                          "real_time_route_id": "171",
                          "route_color": "781b7d",
                          "route_display_short_name": {
                            "boxed_text": "",
                            "elements": [
                              null,
                              "171",
                              null
                            ],
                            "route_name_redundancy": false
                          },
                          "route_long_name": "Henri-Bourassa",
                          "route_short_name": "171",
                          "route_text_color": "ffffff",
                          "route_type": 3,
                          "sorting_key": "171",
                          "tts_long_name": "Henri-Bourassa",
                          "tts_short_name": "171"
                        },
                        {
                          "compact_display_short_name": {
                            "boxed_text": "",
                            "elements": [
                              null,
                              "164",
                              null
                            ],
                            "route_name_redundancy": false
                          },
                          "fares": [
                            {
                              "fare_media_type": 1,
                              "price_min": {
                                "currency_code": "CAD",
                                "symbol": "$",
                                "text": "3,75$",
                                "value": 3.75
                              },
                              "price_max": {
                                "currency_code": "CAD",
                                "symbol": "$",
                                "text": "3,75$",
                                "value": 3.75
                              }
                            }
                          ],
                          "global_route_id": "STM:975",
                          "itineraries": [
                            {
                              "branch_code": "",
                              "closest_stop": {
                                "global_stop_id": "STM:102657",
                                "location_type": 0,
                                "parent_station_global_stop_id": null,
                                "route_type": 3,
                                "rt_stop_id": "54127",
                                "stop_code": "54127",
                                "stop_lat": 45.5561148059816,
                                "stop_lon": -73.66728568969893,
                                "stop_name": "Station Henri-Bourassa",
                                "wheelchair_boarding": 1
                              },
                              "direction_headsign": "Est",
                              "direction_id": 0,
                              "headsign": "Est",
                              "merged_headsign": "Est",
                              "schedule_items": []
                            },
                            {
                              "branch_code": "",
                              "closest_stop": {
                                "global_stop_id": "STM:102658",
                                "location_type": 0,
                                "parent_station_global_stop_id": null,
                                "route_type": 3,
                                "rt_stop_id": "53793",
                                "stop_code": "53793",
                                "stop_lat": 45.55567413901721,
                                "stop_lon": -73.6673486421224,
                                "stop_name": "Station Henri-Bourassa",
                                "wheelchair_boarding": 1
                              },
                              "direction_headsign": "Ouest",
                              "direction_id": 1,
                              "headsign": "Ouest",
                              "merged_headsign": "Ouest",
                              "schedule_items": [
                                {
                                  "departure_time": 1706734200,
                                  "is_cancelled": false,
                                  "is_real_time": true,
                                  "rt_trip_id": "270703982",
                                  "scheduled_departure_time": 1706734200,
                                  "trip_search_key": "STM:44434357:296:1:32",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1706734800,
                                  "is_cancelled": false,
                                  "is_real_time": true,
                                  "rt_trip_id": "270703998",
                                  "scheduled_departure_time": 1706734800,
                                  "trip_search_key": "STM:44434357:296:1:33",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1706735400,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "rt_trip_id": "270704077",
                                  "scheduled_departure_time": 1706735400,
                                  "trip_search_key": "STM:44434357:296:1:34",
                                  "wheelchair_accessible": 1
                                }
                              ]
                            }
                          ],
                          "mode_name": "Bus",
                          "real_time_route_id": "164",
                          "route_color": "009ee0",
                          "route_display_short_name": {
                            "boxed_text": "",
                            "elements": [
                              null,
                              "164",
                              null
                            ],
                            "route_name_redundancy": false
                          },
                          "route_long_name": "Dudemaine",
                          "route_short_name": "164",
                          "route_text_color": "ffffff",
                          "route_type": 3,
                          "sorting_key": "164",
                          "tts_long_name": "Dudemaine",
                          "tts_short_name": "164"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Latitude or longitude is invalid or missing"
          },
          "500": {
            "description": "Internal server error causing no result"
          }
        },
        "requestBody": {
          "content": {}
        }
      },
      "parameters": []
    },
    "/public/nearby_stops": {
      "get": {
        "operationId": "/public/nearby_stops",
        "description": "Returns stops around a location",
        "parameters": [
          {
            "$ref": "#/components/parameters/Latitude"
          },
          {
            "$ref": "#/components/parameters/Longitude"
          },
          {
            "in": "query",
            "name": "max_distance",
            "description": "Maximum radius of search from the request location (in meters)",
            "schema": {
              "type": "integer",
              "example": 1500,
              "default": 150,
              "maximum": 1500
            }
          },
          {
            "in": "query",
            "name": "stop_filter",
            "description": "Determines which location types from the [GTFS](https://developers.google.com/transit/gtfs/reference#stopstxt) are included in the response.\n* Routable (GTFS `location_type` 0): Stops which are served by routes\n* EntrancesAndStopsOutsideStations: Entrances to transit stations and freestanding outdoor stops\n* Entrances (GTFS `location_type` 2): Entrances to stations\n* Any: All stops\n",
            "schema": {
              "type": "string",
              "enum": [
                "Routable",
                "EntrancesAndStopsOutsideStations",
                "Entrances",
                "Any"
              ],
              "example": "Routable",
              "default": "Routable"
            }
          },
          {
            "$ref": "#/components/parameters/PickupDropoffFilter"
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "List of nearby stops",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stops": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stop"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Latitude or longitude is invalid or missing"
          },
          "500": {
            "description": "Internal server error causing no result"
          }
        }
      },
      "parameters": []
    },
    "/public/stop_departures": {
      "get": {
        "operationId": "/public/stop_departures",
        "description": "Get upcoming departures for all routes serving a stop, with optional real time information. ",
        "parameters": [
          {
            "in": "query",
            "name": "global_stop_id",
            "required": true,
            "description": "A global stop ID, representing a routable stop. Usually this value will be reused from a previous call (ex : nearby_stops)",
            "schema": {
              "example": "1:82774",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "time",
            "description": "UNIX timestamp representing the time for which departures should be determined",
            "schema": {
              "type": "number",
              "format": "int",
              "default": "The current time when the request was issued"
            }
          },
          {
            "in": "query",
            "name": "remove_cancelled",
            "description": "Remove cancelled schedule items from the results",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "schema": {
              "type": "boolean",
              "default": true
            },
            "in": "query",
            "name": "should_update_realtime",
            "description": "Boolean telling the system if it should update real time or just return schedule information. "
          },
          {
            "in": "query",
            "name": "max_num_departures",
            "description": "Number of departures to return per stop",
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1,
              "maximum": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of upcoming departures at stop, grouped by route, then by itinerary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "route_departures": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Route"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid global stop ID or no result could be found"
          }
        }
      },
      "parameters": []
    },
    "/otp/plan": {
      "get": {
        "operationId": "/otp/plan",
        "description": "Except as noted, the API is compatible with the OpenTripPlanner API.\nFor additional information, you may refer to <http://dev.opentripplanner.org/apidoc/2.0.0/resource_PlannerResource.html>.\n",
        "parameters": [
          {
            "description": "Selects 'leave after' or 'arrive by' planning.\n\n  | Case    |  Description                           |\n  |---------|----------------------------------------|\n  | `false` | Trip departs after `date` and `time`.  |\n  | `true`  | Trip arrives before `date` and `time`. |\n",
            "in": "query",
            "name": "arriveBy",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "query",
            "name": "date",
            "example": "2021-01-29",
            "description": "Date of departure or arrival. Must be in UTC.",
            "schema": {
              "type": "string",
              "format": "%Y-%m-%d",
              "default": "Current time when request was issued."
            }
          },
          {
            "in": "query",
            "name": "time",
            "example": "20:45",
            "description": "Time of departure or arrival. Must be in UTC.",
            "schema": {
              "type": "string",
              "format": "%H:%M",
              "default": "Current time when request was issued."
            }
          },
          {
            "in": "query",
            "name": "mode",
            "schema": {
              "default": "TRANSIT,WALK",
              "type": "string"
            },
            "example": "TRANSIT,BICYCLE_RENT",
            "description": "The following combinations of mode are currently supported.\n <div class='wide-table'>\n\n | 1st Mode                | 2nd Mode                             | Description                      |\n |-------------------------|--------------------------------------|----------------------------------|\n | `TRANSIT`               | `WALK`                               | Use transit only. (default)      |\n | `BICYCLE`               | *(none)*                             | Use personal bike only.          |\n | `WALK`                  | *(none)*                             | Walk only.                       |\n | `MICROTRANSIT`          | *(none)*                             | Use on-demand public transit services only. |\n | `TRANSIT`               | `BICYCLE_FirstLeg` or `BICYCLE`      | Use personal bike for first leg, transit for rest of trip. |\n | `TRANSIT`               | `BICYCLE_LastLeg`                    | Use personal bike for last leg, transit for rest of trip. |\n | `TRANSIT`               | `BICYCLE_FirstAndLastLegs`           | Use personal bike for the first and last legs of trip, transit for the remaining legs. |\n | `TRANSIT`               | `BICYCLE_RENT`                       | Use bikeshare for the first and last legs of trip, transit for the remaining legs. Docked and dockless bikes, as well as scooters are included. |\n | `TRANSIT`               | `BICYCLE_RENT_Bikeshare`             | Use docked bikes for first and last legs of trip. |\n | `TRANSIT`               | `BICYCLE_RENT_DocklessBikes`         | Use dockless bikes for the first and last legs of trip. |\n | `TRANSIT`               | `BICYCLE_RENT_ElectricScooter`       | Use scooters for the first and last legs of trip. |\n | `TRANSIT`               | `MICROTRANSIT`                       | Use on-demand public transit services for the first and last legs of the trip, and scheduled services for the remaining legs. |\n\n </div>\n <style>\n        code { word-break: keep-all !important; whitespace: pre !important; }\n        .wide-table table td, .wide-table table th { display: inline-block; width: 40%; border: 0}\n        .wide-table table td:nth-child(3), .wide-table table th:nth-child(3) { width: 100% }\n        .wide-table table th:nth-child(3) { visibility: hidden}\n </style>\n"
          },
          {
            "description": "Originating location for the trip.\n* Simple lat/lon pair (e.g. `40.714476,-74.005966`)\n* Lat/lon pair with label (e.g. `289 Broadway::40.714476,-74.005966`)\n",
            "in": "query",
            "name": "fromPlace",
            "required": true,
            "schema": {
              "type": "string",
              "example": "45.51487167249841, -73.56092863046088"
            }
          },
          {
            "description": "The maximum number of possible itineraries to return.",
            "schema": {
              "format": "int32",
              "type": "integer",
              "minimum": 1,
              "maximum": 3,
              "default": 3
            },
            "in": "query",
            "name": "numItineraries"
          },
          {
            "description": "Destination location for the trip.\n* Simple lat/lon pair (e.g. `40.714476,-74.005966`)\n* Lat/lon pair with label (e.g. `289 Broadway::40.714476,-74.005966`)\n",
            "in": "query",
            "name": "toPlace",
            "required": true,
            "schema": {
              "type": "string",
              "example": "45.526168077787894,-73.59506067289408"
            }
          },
          {
            "description": "Language to be used for names in response",
            "in": "query",
            "name": "locale",
            "schema": {
              "default": "en",
              "type": "string"
            }
          },
          {
            "description": "Walking is minimized if walkReluctance &geq; 20.0.",
            "in": "query",
            "name": "walkReluctance",
            "schema": {
              "type": "number",
              "default": 2
            }
          },
          {
            "description": "Whether the trip must be wheelchair accessible.",
            "in": "query",
            "name": "wheelchair",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "ignoreRealTimeUpdates",
            "description": "If false, times within trip plans reflect real-time information if available."
          },
          {
            "schema": {
              "type": "string",
              "example": "MBTA|Boston,RIPTA|Providence"
            },
            "in": "query",
            "name": "allowedNetworks",
            "description": "If set, only the specified networks will be used to plan trips. A list of available networks can be obtained from [`/public/available_networks`](#operation/get-public-available_networks).\n\nThis parameter will accept a comma-separated list containing network IDs, network locations or a combination of both.\nProvides similar functionality to the OTP parameter `whitelistedAgencies`.\n"
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Except as noted, the API is compatible with the OpenTripPlanner API.\nPlease refer to <http://dev.opentripplanner.org/apidoc/2.0.0/json_TripPlannerResponse.html>.\n",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "plan": {
                      "type": "object",
                      "required": [
                        "date",
                        "from",
                        "itineraries",
                        "to"
                      ],
                      "properties": {
                        "date": {
                          "type": "number",
                          "description": "Date on which the trip takes place, represented in UNIX time in milliseconds.",
                          "example": 0
                        },
                        "from": {
                          "type": "object",
                          "required": [
                            "lat",
                            "lon",
                            "name",
                            "vertexType"
                          ],
                          "properties": {
                            "lat": {
                              "type": "number",
                              "format": "double"
                            },
                            "lon": {
                              "type": "number",
                              "format": "double"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the transit stop or other point"
                            },
                            "vertexType": {
                              "$ref": "#/components/schemas/VertexType"
                            }
                          }
                        },
                        "itineraries": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "accessibility": {
                                "type": "string",
                                "minLength": 1,
                                "enum": [
                                  "None",
                                  "WheelchairTripsWithUnknownStops",
                                  "WheelchairStrict"
                                ],
                                "description": "Whether the itinerary is accessible to riders in a wheelchair.\n\n* `None`: Accessible trip not requested.\n\n* `WheelchairTripsWithUnknownStops`: The trips and routes used are accessible, but the accessibility status of at least one stop in the itinerary is unknown.\n\n* `WheelchairStrict`: The itinerary is accessible, and all necessary accessibility info was available."
                              },
                              "duration": {
                                "type": "number",
                                "description": "Duration of the itinerary, in seconds"
                              },
                              "endTime": {
                                "type": "number",
                                "description": "Time at which the last leg of the itinerary ends. Represented as UNIX time, in milliseconds."
                              },
                              "legs": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "agencyId": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "Identifies the transit agency or sharing system provider operating the service used for this leg, where applicable.",
                                      "example": "1:STM"
                                    },
                                    "agencyName": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "The name of the public transit agency or sharing system provider which operates the service used during this leg, where applicable",
                                      "example": "Société de transport de Montréal"
                                    },
                                    "agencyTimeZoneOffset": {
                                      "type": "number",
                                      "description": "The difference between the local timezone and UTC at the time of the trip, represented in milliseconds.",
                                      "example": -18000000
                                    },
                                    "agencyUrl": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "A URL providing information about the transit agency or sharing system provider"
                                    },
                                    "distance": {
                                      "type": "number",
                                      "description": "Distance travelled in this leg, in meters"
                                    },
                                    "duration": {
                                      "type": "number",
                                      "description": "Duration of travel in this leg, in seconds"
                                    },
                                    "endTime": {
                                      "type": "number",
                                      "description": "Time at which this leg ends, represented in UNIX time in milliseconds."
                                    },
                                    "from": {
                                      "type": "object",
                                      "properties": {
                                        "lat": {
                                          "type": "number",
                                          "format": "double"
                                        },
                                        "lon": {
                                          "type": "number",
                                          "format": "double"
                                        },
                                        "name": {
                                          "type": "string",
                                          "minLength": 1,
                                          "description": "The name of the transit stop ([GTFS stop_name](https://developers.google.com/transit/gtfs/reference#stopstxt)), or other point"
                                        },
                                        "stopCode": {
                                          "type": "string",
                                          "minLength": 1,
                                          "description": "For transit stops, `stop_code` from the [GTFS](https://developers.google.com/transit/gtfs/reference#stopstxt)"
                                        },
                                        "stopId": {
                                          "type": "string",
                                          "minLength": 1,
                                          "example": "36:L16",
                                          "description": "Correlates with real-time data when available"
                                        },
                                        "globalStopId": {
                                          "$ref": "#/components/schemas/GlobalStopId"
                                        },
                                        "stopIndex": {
                                          "type": "number",
                                          "description": "For transit stops: Represents the order of the stop within the GTFS trip. For example, stopIndex = 2 means that the bus was boarded at the 3rd stop of the trip."
                                        },
                                        "vertexType": {
                                          "$ref": "#/components/schemas/VertexType"
                                        }
                                      },
                                      "required": [
                                        "lat",
                                        "lon",
                                        "vertexType"
                                      ]
                                    },
                                    "headsign": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "For transit legs, The text nominally displayed on the vehicle servicing the journey, which describes the route, destination, etc. See documentation for [GTFS trip_headsign](https://developers.google.com/transit/gtfs/reference#tripstxt) for further information.",
                                      "example": "East"
                                    },
                                    "intermediateStops": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "A list of all the stops the rider will pass through on this leg without embarking or disembarking the vehicle.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "lat": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "lon": {
                                            "type": "number",
                                            "format": "double"
                                          },
                                          "name": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "`stop_name` from the [GTFS](https://developers.google.com/transit/gtfs/reference#stopstxt)"
                                          },
                                          "stopCode": {
                                            "type": "string",
                                            "minLength": 1,
                                            "description": "`stop_code` from the [GTFS](https://developers.google.com/transit/gtfs/reference#stopstxt)"
                                          },
                                          "stopId": {
                                            "type": "string",
                                            "minLength": 1,
                                            "example": "36:L16",
                                            "description": "Correlates with real-time data when available"
                                          },
                                          "globalStopId": {
                                            "$ref": "#/components/schemas/GlobalStopId"
                                          },
                                          "stopIndex": {
                                            "type": "number",
                                            "description": "Represents the order of the stop within the GTFS trip. For example, stopIndex = 5 means that rider should remain on the bus through the 6th stop of the trip."
                                          },
                                          "vertexType": {
                                            "$ref": "#/components/schemas/VertexType"
                                          }
                                        },
                                        "required": [
                                          "lat",
                                          "lon",
                                          "name",
                                          "stopCode",
                                          "stopId",
                                          "stopIndex",
                                          "vertexType"
                                        ]
                                      }
                                    },
                                    "legGeometry": {
                                      "type": "object",
                                      "description": "A shape representing the path travelled along this leg",
                                      "properties": {
                                        "length": {
                                          "type": "number",
                                          "description": "Number of vertices encoded in points"
                                        },
                                        "points": {
                                          "type": "string",
                                          "minLength": 1,
                                          "description": "A Polyline. The format is specified in <https://developers.google.com/maps/documentation/utilities/polylinealgorithm>"
                                        }
                                      },
                                      "required": [
                                        "length",
                                        "points"
                                      ]
                                    },
                                    "mode": {
                                      "type": "string",
                                      "minLength": 1,
                                      "enum": [
                                        "TRANSIT",
                                        "WALK",
                                        "BICYCLE",
                                        "BICYCLE_RENT",
                                        "TRAM",
                                        "BUS",
                                        "RAIL",
                                        "SUBWAY",
                                        "FERRY",
                                        "GONDOLA"
                                      ],
                                      "description": "The mode used for this leg. A public transit mode will be denoted with a specific vehicle type if applicable (e.g. BUS) or TRANSIT for other types."
                                    },
                                    "route": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "Alias of `routeShortName`"
                                    },
                                    "routeColor": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "`route_color` from the [GTFS](https://developers.google.com/transit/gtfs/reference#routestxt)"
                                    },
                                    "routeId": {
                                      "type": "string",
                                      "minLength": 1,
                                      "example": "36:L",
                                      "description": "Correlates with real-time data when available."
                                    },
                                    "globalRouteId": {
                                      "$ref": "#/components/schemas/GlobalRouteId"
                                    },
                                    "routeLongName": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "For transit legs, `route_long_name` from the [GTFS](https://developers.google.com/transit/gtfs/reference#routestxt)",
                                      "example": "Casgrain"
                                    },
                                    "routeShortName": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "For transit legs, `route_short_name` from the [GTFS](https://developers.google.com/transit/gtfs/reference#routestxt)",
                                      "example": "46"
                                    },
                                    "routeTextColor": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "`route_text_color` from the [GTFS](https://developers.google.com/transit/gtfs/reference#routestxt)"
                                    },
                                    "routeType": {
                                      "type": "number",
                                      "description": "For transit legs, `route_type` from the [GTFS](https://developers.google.com/transit/gtfs/reference#routestxt)"
                                    },
                                    "startTime": {
                                      "type": "number",
                                      "description": "Time at which this leg begins, represented in UNIX time in milliseconds"
                                    },
                                    "to": {
                                      "type": "object",
                                      "properties": {
                                        "lat": {
                                          "type": "number",
                                          "format": "double"
                                        },
                                        "lon": {
                                          "type": "number",
                                          "format": "double"
                                        },
                                        "name": {
                                          "type": "string",
                                          "minLength": 1,
                                          "description": "The name of the transit stop ([GTFS stop_name](https://developers.google.com/transit/gtfs/reference#stopstxt)), or other point"
                                        },
                                        "stopCode": {
                                          "type": "string",
                                          "minLength": 1,
                                          "description": "For transit stops, `stop_code` from the [GTFS](https://developers.google.com/transit/gtfs/reference#stopstxt)"
                                        },
                                        "stopId": {
                                          "type": "string",
                                          "minLength": 1,
                                          "example": "36:L16",
                                          "description": "Correlates with real-time data when available"
                                        },
                                        "globalStopId": {
                                          "$ref": "#/components/schemas/GlobalStopId"
                                        },
                                        "stopIndex": {
                                          "type": "number",
                                          "description": "For transit stops, represents the order of the stop within a GTFS trip. For example stop_index = 20, means that the user should disembark at the 21st stop of the bus' trip."
                                        },
                                        "vertexType": {
                                          "$ref": "#/components/schemas/VertexType"
                                        }
                                      },
                                      "required": [
                                        "lat",
                                        "lon",
                                        "vertexType"
                                      ]
                                    },
                                    "transitLeg": {
                                      "type": "boolean",
                                      "description": "True if travelling by public transit, false for all other modes"
                                    },
                                    "tripBlockId": {
                                      "type": "string",
                                      "description": "`block_id` from the [GTFS](https://developers.google.com/transit/gtfs/reference#tripstxt) if applicable for this leg."
                                    },
                                    "tripId": {
                                      "type": "string",
                                      "minLength": 1,
                                      "description": "Correlates with real-time data where available"
                                    },
                                    "tripShortName": {
                                      "type": "string",
                                      "description": "`trip_short_name` from the [GTFS](https://developers.google.com/transit/gtfs/reference#tripstxt). Generally used for train numbers on commuter rail.",
                                      "example": "106"
                                    },
                                    "tripSearchKey": {
                                      "$ref": "#/components/schemas/TripSearchKey"
                                    },
                                    "interlineWithPreviousLeg": {
                                      "type": "boolean",
                                      "description": "For transit legs. True if an in-seat transfer / trip continuation has occured. The rider may remain onboard while the vehicle now operates on another route."
                                    },
                                    "realTime": {
                                      "type": "boolean",
                                      "description": "True if startTime and endTime for this leg are based on real-time information."
                                    },
                                    "departureDelay": {
                                      "type": "number",
                                      "description": "Delay between the scheduled and real-time startTimes, in seconds. If positive, the vehicle is late, and if negative, the vehicle is early."
                                    },
                                    "arrivalDelay": {
                                      "type": "number",
                                      "description": "Delay between the scheduled and real-time arrival of the vehicle. This value is currently always identical to departureDelay"
                                    }
                                  },
                                  "required": [
                                    "distance",
                                    "duration",
                                    "endTime",
                                    "mode",
                                    "startTime"
                                  ]
                                }
                              },
                              "startTime": {
                                "type": "number",
                                "description": "The time at which the first leg of the itinerary begins. Represented as UNIX time in milliseconds."
                              },
                              "transfers": {
                                "type": "number",
                                "description": "The number of times the user must disembark one transit vehicle and board another during this itinerary."
                              },
                              "transitTime": {
                                "type": "number",
                                "description": "Total time in seconds spent on a transit vehicle."
                              },
                              "walkTime": {
                                "type": "number",
                                "description": "Total time in seconds spent walking"
                              },
                              "wheelchairNeed": {
                                "type": "string",
                                "minLength": 1,
                                "description": "Reflects the requested trip accessibility:\n\n* `None`: Include all trips\n\n* `WheelchairTripsWithUnknownStops`:  Require accessible trips, but include trips using stops with unknown accessibility status."
                              }
                            },
                            "required": [
                              "accessibility",
                              "duration",
                              "endTime",
                              "startTime",
                              "transfers",
                              "transitTime",
                              "walkTime",
                              "wheelchairNeed"
                            ]
                          }
                        },
                        "to": {
                          "type": "object",
                          "required": [
                            "lat",
                            "lon",
                            "name",
                            "vertexType"
                          ],
                          "properties": {
                            "lat": {
                              "type": "number",
                              "format": "double"
                            },
                            "lon": {
                              "type": "number",
                              "format": "double"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the transit stop or other point"
                            },
                            "vertexType": {
                              "$ref": "#/components/schemas/VertexType"
                            }
                          }
                        }
                      }
                    },
                    "transfers": {
                      "type": "object",
                      "description": "Details on transfer time between stops. Only useful if you want to re-calculate the trip using new schedule. ",
                      "required": [
                        "bufferTime",
                        "defaultMinimumTime",
                        "minimumTimes"
                      ],
                      "properties": {
                        "bufferTime": {
                          "type": "number"
                        },
                        "defaultMinimumTime": {
                          "type": "number"
                        },
                        "minimumTimes": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "properties": {
                              "fromFeedId": {
                                "type": "number"
                              },
                              "fromStopId": {
                                "type": "number"
                              },
                              "minTime": {
                                "type": "number"
                              },
                              "toFeedId": {
                                "type": "number"
                              },
                              "toStopId": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "fromFeedId",
                              "fromStopId",
                              "minTime",
                              "toFeedId",
                              "toStopId"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "plan",
                    "transfers"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/public/estimate_plan_duration": {
      "get": {
        "operationId": "/public/estimate_plan_duration",
        "summary": "/public/estimate_plan_duration (Preview)",
        "description": "This endpoint returns an estimated duration for a trip plan based on the provided origin and destination. This endpoint is made available as a preview, and is subject to change. \n\nThe query params used in this endpoint are the same as /public/plan, except for the more limited mode selection, real time not available and multiple results aren't provided. ",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "number"
            },
            "name": "from_lat",
            "description": "Latitude of the starting location for the trip. Required unless from_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "number"
            },
            "name": "from_lon",
            "description": "Longitude of the starting location for the trip. Required unless from_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "from_global_stop_id",
            "description": "Global stop ID for the starting location. Alternative to from_lat/from_lon parameters."
          },
          {
            "in": "query",
            "schema": {
              "type": "number"
            },
            "name": "to_lat",
            "description": "Latitude of the destination location for the trip. Required unless to_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "number"
            },
            "name": "to_lon",
            "description": "Longitude of the destination location for the trip. Required unless to_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "to_global_stop_id",
            "description": "Global stop ID for the destination location. Alternative to to_lat/to_lon parameters."
          },
          {
            "in": "query",
            "name": "mode",
            "description": "The primary mode of transportation for the trip",
            "schema": {
              "default": "transit",
              "type": "string",
              "enum": [
                "transit",
                "microtransit"
              ]
            }
          },
          {
            "in": "query",
            "name": "secondary_mode",
            "description": "The secondary mode of transportation for the trip, if applicable",
            "schema": {
              "type": "string",
              "enum": [
                "microtransit"
              ]
            }
          },
          {
            "in": "query",
            "name": "leave_time",
            "description": "UNIX timestamp representing the desired departure time for the trip",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "arrival_time",
            "description": "UNIX timestamp representing the desired arrival time for the trip",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "accessibility_need",
            "description": "This parameter specifies accessibility requirements for the trip. The following values are available:\n  - `none`: No specific accessibility needs are required; any valid trip may be returned.\n  - `strict`: Returns only strictly accessible trips. Specifically, this includes only trips using accessible stops and accessible routes/vehicles.\n  - `prioritize_step_free`: Prioritizes strictly accessible results but also includes less accessible alternatives (those with unknown or non-step-free accessibility).\n",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "strict",
                "prioritize_step_free"
              ],
              "default": "none"
            }
          },
          {
            "in": "query",
            "name": "walk_reluctance",
            "description": "A factor that determines how much walking costly compared to riding in a transit vehicle in the trip plan. Values lower than 1.0 will be ignored. Transit uses the value of 1.1 by default and 2.1 when in the \"Minimize Walking\" mode. ",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "max_distance_between_location_and_stop",
            "description": "The maximum distance allowed between the starting or destination locations and a transit stop. This value can be adjusted to optimize performance by limiting the search radius. This value can only be customized if `mode=transit`, and the default is 1500m.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This endpoint provides an estimated trip duration in seconds",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "duration": {
                      "type": "number",
                      "description": "Estimated duration of the trip in seconds"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of trip plan (Transit, Walk, Bike, Car_Microtransit)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/plan": {
      "get": {
        "operationId": "/public/plan",
        "summary": "/public/plan (Preview)",
        "description": "This endpoint returns a plan from the origin to the destination in different modes, including multimodal trips. \n\nThis endpoint will eventually replace the /otp/plan. The OTP endpoint is deprecated as the OpenTripPlanner endpoint it's based on is also [deprecated](https://docs.opentripplanner.org/en/latest/Changelog/#250-2024-03-13). ",
        "parameters": [
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "name": "from_lat",
            "description": "Latitude of the starting location for the trip. Required unless from_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "name": "from_lon",
            "description": "Longitude of the starting location for the trip. Required unless from_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "from_global_stop_id",
            "description": "Global stop ID for the starting location. Alternative to from_lat/from_lon parameters."
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "name": "to_lat",
            "description": "Latitude of the destination location for the trip. Required unless to_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "name": "to_lon",
            "description": "Longitude of the destination location for the trip. Required unless to_global_stop_id is provided."
          },
          {
            "in": "query",
            "schema": {
              "type": "string"
            },
            "name": "to_global_stop_id",
            "description": "Global stop ID for the destination location. Alternative to to_lat/to_lon parameters."
          },
          {
            "in": "query",
            "name": "mode",
            "description": "The primary mode of transportation for the trip",
            "schema": {
              "default": "transit",
              "type": "string",
              "enum": [
                "transit",
                "microtransit",
                "personal_bike",
                "walk",
                "shared_mobility"
              ]
            }
          },
          {
            "in": "query",
            "name": "secondary_mode",
            "description": "This specifies the secondary mode of transportation for the trip, if applicable.\n\nThis value allows for creating multimodal trips mixing transit and another mode. If a value other than walk is specified here, primary_mode must be set to transit.\n\nWhen this value is set, the planner attempts to replace the first and last legs of the trip with the specified mode if advantageous to do so. If it is not advantageous, a walk leg might be used instead.\n\nNote that the results generated are optimal given the specified modes, but they might not represent the absolute optimal trip overall. Depending on the context, it may be advantageous to compare the result of the multimodal plan against a direct plan (using only the primary mode) to ensure true optimality (i.e., a transit + microtransit result should likely be disregarded if the transit-only plan is faster).",
            "schema": {
              "type": "string",
              "enum": [
                "microtransit",
                "personal_bike",
                "walk",
                "shared_mobility"
              ]
            }
          },
          {
            "in": "query",
            "name": "sharing_system_type",
            "description": "Specifies the type of shared mobility system when mode is set to shared_mobility.\n\n- docked_bikeshare: Traditional docked bikeshare systems\n- dockless_bikeshare: Dockless bikes\n- scooters: Electric scooters\n\nIf not specified, defaults to docked_bikeshare only.",
            "schema": {
              "type": "string",
              "enum": [
                "docked_bikeshare",
                "dockless_bikeshare",
                "scooters"
              ],
              "default": "docked_bikeshare"
            }
          },
          {
            "in": "query",
            "name": "leave_time",
            "description": "UNIX timestamp representing the desired departure time for the trip. If both `arrival_time` and `leave_time` are provided, only `leave_time` is taken into account. By default, the current time is used. ",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "arrival_time",
            "description": "UNIX timestamp representing the desired arrival time for the trip. If both `arrival_time` and `leave_time` are provided, only `leave_time` is taken into account.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "accessibility_need",
            "description": "This parameter specifies accessibility requirements for the trip. The following values are available:\n  - `none`: No specific accessibility needs are required; any valid trip may be returned.\n  - `strict`: Returns only strictly accessible trips. Specifically, this includes only trips using accessible stops and accessible routes/vehicles.\n  - `prioritize_step_free`: Prioritizes strictly accessible results but also includes less accessible alternatives (those with unknown or non-step-free accessibility).\n",
            "schema": {
              "default": "none",
              "type": "string",
              "enum": [
                "none",
                "strict",
                "prioritize_step_free"
              ]
            }
          },
          {
            "in": "query",
            "name": "walk_reluctance",
            "description": "This factor determines how costly walking is compared to riding in a transit vehicle within the trip plan. Values lower than 1.0 will be ignored. Transit, the app, uses a default value of 1.1, and 2.1 when the \"Minimize Walking\" mode is active.",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "max_distance_between_location_and_stop",
            "description": "This is the maximum distance allowed between the starting or destination locations and a transit stop. This value can be adjusted to optimize performance by limiting the search radius. By default, the value depends on the selected mode; for example, it is 1500 m for a standard `mode=transit` plan.",
            "schema": {
              "type": "number"
            }
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "should_update_realtime",
            "description": "If true, the server will update the trip times in the response using real-time data, enhancing the schedule items with real time information. This happens after the initial route planning, which is still based on static schedule data."
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "consider_downtimes",
            "description": "If true, the planning will avoid any known downtimes identified in the service alerts. For example, if a subway is currently not working and has a severe service alert, the planner will offer results that work around that disruption. This parameter is ignored if the `mode` is set to anything other than `transit`."
          },
          {
            "schema": {
              "type": "number",
              "default": 3
            },
            "in": "query",
            "name": "num_result",
            "description": "Number of results to return. This parameter is only considered for public transit only plans (mode=transit). Default is 3 for public transit only plans and 1 for all other modes."
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "disable_walk_on_multimodal_fallback",
            "description": "If true, disables the automatic walk fallback in multimodal trip planning. When enabled, the planner will only use the specified multimodal mode (e.g., bike, car) and only fallback to walking if no stops are accessible in the multimodal mode. This provides more control over transportation mode preferences in multimodal planning. This parameter only affects multimodal transit trips and is ignored for other modes."
          },
          {
            "in": "query",
            "name": "max_num_departures",
            "description": "Number of departures to return per stop",
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1,
              "maximum": 10
            }
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "soft_timeout",
            "description": "Soft timeout for routing, in milliseconds. Once an optimal routing result is found AND this timeout is reached, the router will stop the search for suboptimal results."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "x-stoplight": {
                        "id": "ug62tg2kogi43"
                      },
                      "description": "A list of results. It can be empty if no results are found.",
                      "items": {
                        "x-stoplight": {
                          "id": "uq7z7qhex6kp2"
                        },
                        "type": "object",
                        "properties": {
                          "accessibility": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "u52iy7w29yngp"
                            },
                            "description": "Indicates whether this result is wheelchair accessible. The possible values are:\n  - `None`: not accessible\n  - `WheelchairStrict`: entirely accessible\n  - `WheelchairTripsWithUnknownStops`: The selected trip routes/vehicles are wheelchair accessible, but some stops used in the trip have unknown wheelchair accessibility status.",
                            "enum": [
                              "WheelchairStrict",
                              "None",
                              "WheelchairTripsWithUnknownStops"
                            ]
                          },
                          "start_time": {
                            "type": "integer",
                            "x-stoplight": {
                              "id": "13rbya1nml1ww"
                            },
                            "description": "The expected start time in unix time"
                          },
                          "end_time": {
                            "type": "integer",
                            "x-stoplight": {
                              "id": "uizawdhdkgfqi"
                            },
                            "description": "The expected start time in unix time"
                          },
                          "duration": {
                            "type": "integer",
                            "x-stoplight": {
                              "id": "o20xvvf4o3ivj"
                            },
                            "description": "The expected duration of the trip, in seconds. "
                          },
                          "fare": {
                            "type": "object",
                            "x-stoplight": {
                              "id": "jmkjcwd9wjy8g"
                            },
                            "description": "Object representing the price to pay for the entire trip plan. In most cases, the high and low price should be the same but can be different in some microtransit and bikeshare plans. Can be null if the fare is unknown. ",
                            "properties": {
                              "low_price": {
                                "$ref": "#/components/schemas/Price",
                                "x-stoplight": {
                                  "id": "ggxlha6hu547d"
                                }
                              },
                              "high_price": {
                                "$ref": "#/components/schemas/Price",
                                "x-stoplight": {
                                  "id": "1mocw2amj8jz4"
                                }
                              }
                            }
                          },
                          "legs": {
                            "type": "array",
                            "x-stoplight": {
                              "id": "ebj325q2we374"
                            },
                            "description": "Ordered array of the different legs of this trip. Each leg can be of different type, defined in `leg_mode` with the same values as the query param `mode`.",
                            "minItems": 1,
                            "items": {
                              "x-stoplight": {
                                "id": "j780a9xnc98iq"
                              },
                              "anyOf": [
                                {
                                  "$ref": "#/components/schemas/SimpleLeg"
                                },
                                {
                                  "$ref": "#/components/schemas/TransitLeg",
                                  "x-stoplight": {
                                    "id": "n8le43lwzsdjl"
                                  }
                                },
                                {
                                  "$ref": "#/components/schemas/MicrotransitLeg",
                                  "x-stoplight": {
                                    "id": "btyck63zu2rhw"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "accessibility",
                          "start_time",
                          "end_time",
                          "duration"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "results": [
                        {
                          "accessibility": "WheelchairStrict",
                          "duration": 1517,
                          "end_time": 1746043067,
                          "legs": [
                            {
                              "distance": 281.6752572370887,
                              "duration": 330,
                              "end_time": 1746041880,
                              "leg_mode": "walk",
                              "polyline": "og}tGzch`MeCfH??CFAD??aAlC??ZZTFFB@EZjA",
                              "start_time": 1746041550
                            },
                            {
                              "departures": [
                                {
                                  "departure_time": 1746041880,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746042720,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "284450730",
                                      "scheduled_departure_time": 1746042720,
                                      "trip_search_key": "STM:48373262:2:1:129",
                                      "wheelchair_accessible": 1
                                    },
                                    "stop_schedule_items": [
                                      {
                                        "global_stop_id": "STM:17989",
                                        "departure_time": 1746041880,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450730",
                                        "scheduled_departure_time": 1746041880,
                                        "trip_search_key": "STM:48373262:2:1:129",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18045",
                                        "departure_time": 1746042120,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450730",
                                        "scheduled_departure_time": 1746042120,
                                        "trip_search_key": "STM:48373262:2:1:129",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18102",
                                        "departure_time": 1746042720,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450730",
                                        "scheduled_departure_time": 1746042720,
                                        "trip_search_key": "STM:48373262:2:1:129",
                                        "wheelchair_accessible": 1
                                      }
                                    ],
                                    "global_route_id": "STM:863",
                                    "internal_itinerary_id": "2:65535:false"
                                  },
                                  "rt_trip_id": "284450730",
                                  "scheduled_departure_time": 1746041880,
                                  "trip_search_key": "STM:48373262:2:1:129",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1746042120,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746042960,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "284450769",
                                      "scheduled_departure_time": 1746042960,
                                      "trip_search_key": "STM:48373262:2:1:130",
                                      "wheelchair_accessible": 1
                                    },
                                    "stop_schedule_items": [
                                      {
                                        "global_stop_id": "STM:17989",
                                        "departure_time": 1746042120,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450769",
                                        "scheduled_departure_time": 1746042120,
                                        "trip_search_key": "STM:48373262:2:1:130",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18045",
                                        "departure_time": 1746042360,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450769",
                                        "scheduled_departure_time": 1746042360,
                                        "trip_search_key": "STM:48373262:2:1:130",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18102",
                                        "departure_time": 1746042960,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450769",
                                        "scheduled_departure_time": 1746042960,
                                        "trip_search_key": "STM:48373262:2:1:130",
                                        "wheelchair_accessible": 1
                                      }
                                    ],
                                    "global_route_id": "STM:863",
                                    "internal_itinerary_id": "2:65535:false"
                                  },
                                  "rt_trip_id": "284450769",
                                  "scheduled_departure_time": 1746042120,
                                  "trip_search_key": "STM:48373262:2:1:130",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1746042300,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746043140,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "284450823",
                                      "scheduled_departure_time": 1746043140,
                                      "trip_search_key": "STM:48373262:2:1:131",
                                      "wheelchair_accessible": 1
                                    },
                                    "stop_schedule_items": [
                                      {
                                        "global_stop_id": "STM:17989",
                                        "departure_time": 1746042300,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450823",
                                        "scheduled_departure_time": 1746042300,
                                        "trip_search_key": "STM:48373262:2:1:131",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18045",
                                        "departure_time": 1746042540,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450823",
                                        "scheduled_departure_time": 1746042540,
                                        "trip_search_key": "STM:48373262:2:1:131",
                                        "wheelchair_accessible": 1
                                      },
                                      {
                                        "global_stop_id": "STM:18102",
                                        "departure_time": 1746043140,
                                        "is_cancelled": false,
                                        "is_real_time": false,
                                        "rt_trip_id": "284450823",
                                        "scheduled_departure_time": 1746043140,
                                        "trip_search_key": "STM:48373262:2:1:131",
                                        "wheelchair_accessible": 1
                                      }
                                    ],
                                    "global_route_id": "STM:863",
                                    "internal_itinerary_id": "2:65535:false"
                                  },
                                  "rt_trip_id": "284450823",
                                  "scheduled_departure_time": 1746042300,
                                  "trip_search_key": "STM:48373262:2:1:131",
                                  "wheelchair_accessible": 1
                                }
                              ],
                              "duration": 840,
                              "end_time": 1746042720,
                              "leg_mode": "transit",
                              "start_time": 1746041880,
                              "routes": [
                                {
                                  "compact_display_short_name": {
                                    "boxed_text": "",
                                    "elements": [
                                      "stm-metro-2",
                                      "",
                                      null
                                    ],
                                    "route_name_redundancy": false
                                  },
                                  "fares": [],
                                  "global_route_id": "STM:863",
                                  "itineraries": [
                                    {
                                      "branch_code": "",
                                      "canonical_itinerary": true,
                                      "direction_headsign": "Côte-Vertu",
                                      "direction_id": 0,
                                      "headsign": "Côte-Vertu",
                                      "is_active": true,
                                      "merged_headsign": "Côte-Vertu",
                                      "plan_details": {
                                        "end_stop_offset": 17,
                                        "internal_itinerary_id": "2:65535:false",
                                        "plan_shape": "ek}tGluh`MJ_Apn@ocBfA}DtAeG^oCn@sDb@eBdP{d@j@kA|BaEvtAgzDp@}A^g@\\Mb@Gb@Fh@Tv{@pq@lVzW^b@",
                                        "start_stop_offset": 7
                                      },
                                      "shape": "sbauGz{}`MsDyJ_AcDQoAmGglAaAegCFsAp@sG\\gAtBeEdP{X`F{Rt@wMJaGZ{F|@_F~@sDdMa[Tu@foAwxGxDiZpn@ocBfA}DtAeG^oCn@sDb@eBdP{d@j@kA|BaEvtAgzDp@}A^g@\\Mb@Gb@Fh@Tv{@pq@lVzWne@jl@|CvC~Az@pIhElCbAbAT~@PfBBpGKbBJnCf@`Bt@fAbA~@lA`ArCh@rAbBfDlDvFpA`BfLtIfAfAjBjCfAlBf@rArClKH`AFjACbDUlFQ|Ag@jBcDpHk@fB[`CM|BCtCLbBZdBx@|B~@jBjJpLzDlHhA~C~CnMPlB?TQxAo|@~lCYf@m@Ru@?m\\qIgAEc@Ha@X_@t@k^|fAsFvNc@`DPpBp@|C|@|BdHzNj@jCPjDI~Ho@bFgDbK{`@ju@}CpDwl@h`Amb@n}@",
                                      "stops": [
                                        {
                                          "global_stop_id": "STM:87803",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": "STM:87758",
                                          "route_type": 1,
                                          "rt_stop_id": "68",
                                          "stop_code": "10288",
                                          "stop_lat": 45.55843505244717,
                                          "stop_lon": -73.72245899228142,
                                          "stop_name": "Montmorency",
                                          "wheelchair_boarding": 1
                                        },
                                        {
                                          "global_stop_id": "STM:87790",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": "STM:104510",
                                          "route_type": 1,
                                          "rt_stop_id": "9999112",
                                          "stop_code": "10146",
                                          "stop_lat": 45.51521371712338,
                                          "stop_lon": -73.56104897846714,
                                          "stop_name": "Berri-UQAM",
                                          "wheelchair_boarding": 1
                                        },
                                        {
                                          "global_stop_id": "STM:87783",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": "STM:87710",
                                          "route_type": 1,
                                          "rt_stop_id": "36",
                                          "stop_code": "10132",
                                          "stop_lat": 45.48250543652151,
                                          "stop_lon": -73.58017752200308,
                                          "stop_name": "Lionel-Groulx",
                                          "wheelchair_boarding": 1
                                        },
                                        {
                                          "global_stop_id": "STM:87773",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": "STM:87730",
                                          "route_type": 1,
                                          "rt_stop_id": "65",
                                          "stop_code": "10222",
                                          "stop_lat": 45.51423345795769,
                                          "stop_lon": -73.6827539994694,
                                          "stop_name": "Côte-Vertu",
                                          "wheelchair_boarding": 1
                                        }
                                      ]
                                    }
                                  ],
                                  "mode_name": "Métro",
                                  "real_time_route_id": "2",
                                  "route_color": "f37d00",
                                  "route_display_short_name": {
                                    "boxed_text": "",
                                    "elements": [
                                      "stm-metro",
                                      "",
                                      "stm-metro-2"
                                    ],
                                    "route_name_redundancy": false
                                  },
                                  "route_image": "stm-metro-2",
                                  "route_long_name": "Ligne 2 - Orange",
                                  "route_network_id": "STM|Montréal",
                                  "route_network_name": "STM",
                                  "route_short_name": "2",
                                  "route_text_color": "ffffff",
                                  "route_type": 1,
                                  "sorting_key": "2",
                                  "tts_long_name": "Côte-Vertu - Montmorency",
                                  "tts_short_name": "ligne 2, orange",
                                  "vehicle": {
                                    "image": "vehicle-rail-mpm10",
                                    "name": "métro",
                                    "name_inflection": "m"
                                  }
                                }
                              ]
                            },
                            {
                              "distance": 293.6093402468491,
                              "duration": 347,
                              "end_time": 1746043067,
                              "leg_mode": "walk",
                              "polyline": "ejutGpr_`MFcA@BBEHU??BGDK??b@cA??DODO??H[??B???JWDOBG???A??dByE??@A??FOJ[??CG_@_@??ECCC??CC",
                              "start_time": 1746042720
                            }
                          ],
                          "start_time": 1746041550
                        },
                        {
                          "accessibility": "None",
                          "duration": 3402,
                          "end_time": 1746045228,
                          "legs": [
                            {
                              "distance": 849.7729938846024,
                              "duration": 714,
                              "end_time": 1746042540,
                              "leg_mode": "walk",
                              "polyline": "og}tGzch`MRi@@A??n@j@??DBBB??n@p@??BC??FHHF??@B??r@l@??@BB@??|@z@??B???B@JHJLBB???B??~@t@??BDBB??\\n@D^??@@??FRFT???@??H@f@r@??@???FF??FO??HFdA~@FFHFnAjAFF??FDpAlAJFHJZXv@r@JJ??LJr@p@r@n@JJ??`@iA??HHp@j@??p@n@??EJ??JHHJ???B??CH",
                              "start_time": 1746041826
                            },
                            {
                              "departures": [
                                {
                                  "departure_time": 1746042540,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746044220,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "285002179",
                                      "scheduled_departure_time": 1746044220,
                                      "trip_search_key": "SANDBOX:48261170:3:14:40",
                                      "wheelchair_accessible": 2
                                    },
                                    "global_route_id": "SANDBOX:242447",
                                    "internal_itinerary_id": "3:65535:false"
                                  },
                                  "rt_trip_id": "285002179",
                                  "scheduled_departure_time": 1746042540,
                                  "trip_search_key": "SANDBOX:48261170:3:14:40",
                                  "wheelchair_accessible": 2
                                },
                                {
                                  "departure_time": 1746043500,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746045240,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "284738744",
                                      "scheduled_departure_time": 1746045240,
                                      "trip_search_key": "SANDBOX:48261170:3:14:41",
                                      "wheelchair_accessible": 1
                                    },
                                    "global_route_id": "SANDBOX:242447",
                                    "internal_itinerary_id": "3:65535:false"
                                  },
                                  "rt_trip_id": "284738744",
                                  "scheduled_departure_time": 1746043500,
                                  "trip_search_key": "SANDBOX:48261170:3:14:41",
                                  "wheelchair_accessible": 1
                                },
                                {
                                  "departure_time": 1746044400,
                                  "is_cancelled": false,
                                  "is_real_time": false,
                                  "plan_details": {
                                    "arrival_schedule_item": {
                                      "departure_time": 1746046140,
                                      "is_cancelled": false,
                                      "is_real_time": false,
                                      "rt_trip_id": "284740835",
                                      "scheduled_departure_time": 1746046140,
                                      "trip_search_key": "SANDBOX:48261170:3:14:42",
                                      "wheelchair_accessible": 1
                                    },
                                    "global_route_id": "SANDBOX:242447",
                                    "internal_itinerary_id": "3:65535:false"
                                  },
                                  "rt_trip_id": "284740835",
                                  "scheduled_departure_time": 1746044400,
                                  "trip_search_key": "SANDBOX:48261170:3:14:42",
                                  "wheelchair_accessible": 1
                                }
                              ],
                              "duration": 1680,
                              "end_time": 1746044220,
                              "leg_mode": "transit",
                              "start_time": 1746042540,
                              "routes": [
                                {
                                  "compact_display_short_name": {
                                    "boxed_text": "",
                                    "elements": [
                                      null,
                                      "TDSN",
                                      null
                                    ],
                                    "route_name_redundancy": false
                                  },
                                  "fares": [],
                                  "global_route_id": "SANDBOX:242447",
                                  "itineraries": [
                                    {
                                      "branch_code": "",
                                      "canonical_itinerary": true,
                                      "direction_headsign": "Sud",
                                      "direction_id": 1,
                                      "headsign": "Sud",
                                      "is_active": true,
                                      "merged_headsign": "Sud",
                                      "plan_details": {
                                        "end_stop_offset": 44,
                                        "internal_itinerary_id": "3:65535:false",
                                        "plan_shape": "yb|tGrci`M@CHc@jAqCfMo_@|AaEf@yAfC_FnJoOLKtLs\\nMk_@bFmMtDyKlGiQ`Lq\\tLy\\`DiJn@gBhAiDpG_Rj@cBb@kBhAwC|AkE^gAhBcFR_AjAgDxI{UDWx@eCnAaDHc@bAcCpAwD",
                                        "start_stop_offset": 22
                                      },
                                      "shape": "wy`uGhhs`MqAdHjC|Cb@rApApAhCbBH?`DwPrCfApInDlIdEHErCsMbJid@nD{P|CuOrIed@tDiRvCcPVw@Po@vBuKPk@BIbAm@LOHEPMJUDc@Bo@Ci@q@eD?QF_@jBkJp@}DrDcRvDeRzBaM~E{VnD_RbAyE`AaDHk@hDgJjB|ALCzFiPHc@jAqCfMo_@|AaEf@yAfC_FnJoOLKtLs\\nMk_@bFmMtDyKlGiQ`Lq\\tLy\\`DiJn@gBhAiDpG_Rj@cBb@kBhAwC|AkE^gAhBcFR_AjAgDxI{UDWx@eCnAaDHc@bAcCnDkK|@kAZ{@JK?MBGd@}BFWwFiEKFm@lB",
                                      "stops": [
                                        {
                                          "global_stop_id": "SANDBOX:7483",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": null,
                                          "route_type": 3,
                                          "rt_stop_id": "50314",
                                          "stop_code": "50314",
                                          "stop_lat": 45.55695117389361,
                                          "stop_lon": -73.66803212557738,
                                          "stop_name": "Millen / Henri-Bourassa",
                                          "wheelchair_boarding": 1
                                        },
                                        {
                                          "global_stop_id": "SANDBOX:7484",
                                          "location_type": 0,
                                          "parent_station_global_stop_id": null,
                                          "route_type": 3,
                                          "rt_stop_id": "50301",
                                          "stop_code": "50301",
                                          "stop_lat": 45.55390247795629,
                                          "stop_lon": -73.66914728279339,
                                          "stop_name": "Station Henri-Bourassa",
                                          "wheelchair_boarding": 1
                                        }
                                      ]
                                    }
                                  ],
                                  "mode_name": "Mode name",
                                  "real_time_route_id": "55",
                                  "route_color": "781b7d",
                                  "route_display_short_name": {
                                    "boxed_text": "Saint-Laurent",
                                    "elements": [
                                      "mla-g",
                                      "55",
                                      "mla-d"
                                    ],
                                    "route_name_redundancy": false
                                  },
                                  "route_image": "stm-metro",
                                  "route_long_name": "Station Pl.-des-Arts <​> Bureau <​> Station de Castelnau",
                                  "route_network_id": "Network name (tGTFS fields)|Montréal",
                                  "route_network_name": "Network name (tGTFS fields)",
                                  "route_short_name": "55",
                                  "route_text_color": "ffffff",
                                  "route_type": 3,
                                  "sorting_key": "55",
                                  "tts_long_name": "Station Pl.-des-Arts <​> Bureau <​> Station de Castelnau",
                                  "tts_short_name": "55",
                                  "vehicle": {
                                    "image": "cal-bus",
                                    "name": "bus",
                                    "name_inflection": "m"
                                  }
                                }
                              ]
                            },
                            {
                              "distance": 1202.10671170531,
                              "duration": 1008,
                              "end_time": 1746045228,
                              "leg_mode": "walk",
                              "polyline": "g|vtGt`~_M`@kA??DBt@o@??VS??DE??fCrB??LL??DB??LJ??VPpA~@??FDHJHFHF??|AnAZV??LHLJ??l@j@??FDHH??lB|A??FDFD??nAdA??BC??PEHEHC??????h@`@??DBFDHJ??RL??DBDD??@@??zFlE??BBFD??RT??BEt@oAZi@??B???JNT\\HJ??BF??DG??D@VT??DDDH??rBnB??NJNP??RP^`@??@A??JLJF??JMJW??`@X???@??HHHH??@???PP",
                              "start_time": 1746044220
                            }
                          ],
                          "start_time": 1746041826
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/map_layers/placemarks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/Latitude"
          },
          {
            "$ref": "#/components/parameters/Longitude"
          },
          {
            "name": "distance",
            "description": "Distance in meters (as the bird flies). ",
            "schema": {
              "format": "int32",
              "default": 100,
              "type": "integer",
              "maximum": 2000
            },
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "placemarks": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "$ref": "#/components/schemas/FloatingPlacemark"
                          },
                          {
                            "$ref": "#/components/schemas/StationPlacemark"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "description": "A list of nearby placemarks",
            "x-last-modified": 1614306473111
          },
          "400": {
            "description": "Unable to process location or distance"
          },
          "404": {
            "description": "No placemarks were found near the requested location"
          }
        },
        "operationId": "/map_layers/placemarks",
        "description": "Returns placemarks for a location. Placemarks include bikeshare system docks, scooters and other shared systems. "
      },
      "x-last-modified": 1614306198911,
      "parameters": []
    },
    "/public/available_networks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "networks": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "network_id": {
                            "$ref": "#/components/schemas/NetworkId"
                          },
                          "network_name": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Name of the network. ",
                            "example": "BC Transit West Kootenay"
                          },
                          "network_location": {
                            "type": "string",
                            "description": "Region in which the network is located",
                            "example": "West Kootenay"
                          },
                          "network_in_beta": {
                            "type": "boolean",
                            "x-stoplight": {
                              "id": "e5kftcmil3g8i"
                            },
                            "description": "The provided network is for private use, like a network preview for an upcoming schedule change. It should not be used to the general public without validation. Should be always false when the `include_all_networks` parameter is set to false."
                          },
                          "network_geometry": {
                            "type": "object",
                            "description": "GeoJSON (of type Polygon or MultiPolygon) representing the service provided by the network. "
                          },
                          "network_geometry_center": {
                            "type": "object",
                            "x-stoplight": {
                              "id": "w2flub76mn4o7"
                            },
                            "description": "GeoJSON of type Point representing the center point of the network geometry. Only returned if `include_network_geometry` is `true`."
                          }
                        },
                        "required": [
                          "network_id",
                          "network_name",
                          "network_location"
                        ]
                      }
                    }
                  },
                  "required": [
                    "networks"
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "/public/available_networks",
        "description": "List of networks available in the entire Transit system. For more information about networks, refer to the /public/stop_departures endpoint and the 'route_network_name'. Optionnaly, a lat/lon can be passed to filter networks to only the ones that support that coordinate. ",
        "parameters": [
          {
            "in": "query",
            "name": "lat",
            "schema": {
              "type": "number"
            },
            "description": "Optional latitude, if provided in addition to `lon` the network returned will only include networks serving that location. "
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Optional longitude, if provided in addition to `lat` the network returned will only include networks serving that location. "
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "country_code",
            "description": "Optional country code (ISO 3166-1 alpha-2 format, e.g., \"US\", \"CA\") to filter networks to only those available in the specified country."
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_all_networks",
            "description": "Include additional supported networks that are filtered out by default. For example, these may include school busses and previews of upcoming agency network redesigns."
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "schema": {
              "type": "boolean",
              "default": "true"
            },
            "in": "query",
            "name": "include_network_geometry",
            "description": "Include the network geometry in the response. True by default. "
          }
        ]
      },
      "parameters": []
    },
    "/map_layers/available_networks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "networks": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "network_geometry": {
                            "type": "object",
                            "description": "GeoJSON (of type Polygon) representing the service provided by the network."
                          },
                          "network_id": {
                            "type": "integer",
                            "description": "Identifier of the network."
                          },
                          "network_name": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Name of the network."
                          },
                          "network_logo": {
                            "type": "string",
                            "x-stoplight": {
                              "id": "fyxuruvlvff5b"
                            },
                            "description": "An image slug for the network. More information about getting images from the slug can be found in the DisplayShortName description."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "/map_layers/available_networks",
        "description": "List of sharing system networks available in the entire Transit system.",
        "parameters": []
      }
    },
    "/public/route_details": {
      "get": {
        "description": "Get detailed information like shape and itineraries for a route",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "itineraries": [
                        {
                          "direction_headsign": "5th / Mo via Fairview Hgts Sta",
                          "direction_id": 0,
                          "headsign": "5th / Mo via Fairview Hgts Sta",
                          "shape": "_ubjFhaddPLKD?JBbB`CFPBVCPCFc@f@GLAXDLbA|ArJ|NZb@|Al@v@JnL?~DG@",
                          "stops": [
                            {
                              "global_stop_id": "109:58970",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.52170308738304,
                              "stop_lon": -89.97461636717475,
                              "stop_name": "Belleville Loop / MetroLink"
                            },
                            {
                              "global_stop_id": "109:58982",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.51373510921057,
                              "stop_lon": -89.99329525054294,
                              "stop_name": "Main / 6th Street WB"
                            },
                            {
                              "global_stop_id": "109:59048",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.594700919015,
                              "stop_lon": -90.04827969585497,
                              "stop_name": "Fairview Heights Loop / MetroLink"
                            },
                            {
                              "global_stop_id": "109:59114",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62501700752446,
                              "stop_lon": -90.15905797478099,
                              "stop_name": "5th / Missouri Loop / MetroLink"
                            }
                          ]
                        },
                        {
                          "direction_headsign": "5th / Mo via Fairview Hgts Sta",
                          "direction_id": 0,
                          "headsign": "5th / Mo",
                          "shape": "{zpjFhmrdPPc@?qIcD?_FOCjBS`Dg@|C_@`Bc@|Au@pBeAzBkCbE",
                          "stops": [
                            {
                              "global_stop_id": "109:59048",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.594700919015,
                              "stop_lon": -90.04827969585497,
                              "stop_name": "Fairview Heights Loop / MetroLink"
                            },
                            {
                              "global_stop_id": "109:59049",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.59756075768186,
                              "stop_lon": -90.05066289474404,
                              "stop_name": "St. Clair / Magdalena WB"
                            },
                            {
                              "global_stop_id": "109:59050",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.596544525702754,
                              "stop_lon": -90.05431413530613,
                              "stop_name": "Il Route 157 / Church SB"
                            }
                          ]
                        },
                        {
                          "direction_headsign": "Belleville Sta via Fairview Hgts Sta",
                          "direction_id": 1,
                          "headsign": "Belleville Sta via Fairview Hgts Sta",
                          "shape": "w|vjF`fhePh@lAPBTCPQrAkBzBlDgEnFoA|A{@tAeBjByAsEsNu_@EsCnEgGfAmAzEcGnCgDnCoDh@k@xAmHtKob@hGwVrD}MfAoEjAmExB{I`E{O\\aB~AiGf@}A^yA`@mAb@u@lBsE|@eC~A}DdOg]zEkKfBoD~EcKHYp@yKNcC^mEPkBt@_GjBkNp@eEf@oEzAyKx@uGLq@`CiO^gBt@kCf@kAt@qAj@}AjC{S|AwMv@oE\\sBpAuKnA{EjEwOdBmGt@aD@Wf@sBp@kBzGeOzCeGfBeE`NgVtJmQp@wA`AyAdIwOvBcEPa@tAgCdFcKcAwBoAkBcAmAqJoJ}@u@}AiAmA}@wBkAyMeGsDyAoAk@yBm@kFcBmCoASUQSM]?_@Hq@LYPQPEX?R?zDxAFQjBqDRQjCcEdA{Bt@qBb@}AbBjAZPX?vG_E^e@Pc@?qIfGGbCY|A[^MnAc@xAy@h@I`DoBjCcBpHqFlFgD|BwA`B{@d@DTTJPU~G_@nBs@|AWd@c@f@c@b@_@Xo@ZkDrA[LaAp@g@h@w@dAg@fAu@~BQdAMbAKdEFlA`DtZjAxNDrACbAQ|EPn@hE{Cl@_@jA[|@MpIg@b@CrD[h@KlCEtDQnACfCB|@@bDEtF_@z@YzCkAfA[xJoDbK{DbCy@xK}DnBgAnCuBnAoA~GaHjE_DfIaEvEqBhG}ChIwDnA}@jBmB`F{FbAaAdMwNzGmHpQeSbCoCfAeAzD_DbB}AvCaCxA}Ahf@cz@fBsC~DkErMsMjLaLbCgCj@c@PU|BqB|F{F|ByAzDsBvH}C\\IfAUhGy@rDg@fBc@hEyCz@y@|CcDbH_Ix@u@`CmCzBkCr@cAtAcCtCkGfA_C|AaElE}LnFiOdDaJnCeHf@eCLuADgAAkBxB?p@EPeBB_K?eYDeG?cPAiG?eFeECeKFoL?w@KQEkAg@[c@sJ}NcA}AEM@YFMb@g@FM?]KWcB}BGGI?KFq@bA",
                          "stops": [
                            {
                              "global_stop_id": "109:62455",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62501700752446,
                              "stop_lon": -90.15905797478099,
                              "stop_name": "5th / Missouri Loop / MetroLink"
                            },
                            {
                              "global_stop_id": "109:62456",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62393782312187,
                              "stop_lon": -90.16037098247081,
                              "stop_name": "503 River Park NB"
                            },
                            {
                              "global_stop_id": "109:62457",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62527781042176,
                              "stop_lon": -90.16198076587133,
                              "stop_name": "River Park / 4th Street NB"
                            }
                          ]
                        },
                        {
                          "direction_headsign": "Belleville Sta via Fairview Hgts Sta",
                          "direction_id": 1,
                          "headsign": "Belleville Sta via Fairview Hgts Sta",
                          "shape": "ipsjFps}dPfAiIb@sCx@uGLq@`CiO^gBt@kCf@kAt@qAj@}AjC{S|AwMv@oE\\sBpAuKnA{EjEwOdBmGt@aD@Wf@sBp@kBzGeOzCeGfBeE`NgVtJmQp@wA`AyAdIwOvBcEPa@tAgCdFcKcAwBoAkBcAmAqJoJ}@u@}AiAmA}@wBkAyMeGsDyAoAk@yBm@kFcBmCoASUQSM]?_@@YFWLYPQPEX?R?zDxAFQjBqDRQjCcEdA{Bt@qBb@}AbBjAZPX?vG_E^e@Pc@?qIfGGbCY|A[^MnAc@xAy@h@I`DoBjCcBpHqFlFgD|BwA`B{@d@DTTJPU~G_@nBs@|AWd@c@f@c@b@_@Xo@ZkDrA[LaAp@g@h@w@dAg@fAu@~BQdAMbAKdEFlA`DtZjAxNDrACbAQ|EPn@hE{Cl@_@jA[|@MpIg@b@CrD[h@KlCEtDQnACfCB|@@bDEtF_@z@YzCkAfA[xJoDbK{DbCy@xK}DnBgAnCuBnAoA~GaHjE_DfIaEvEqBhG}ChIwDnA}@jBmB`F{FbAaAdMwNzGmHpQeSbCoCfAeAzD_DbB}AvCaCxA}Ahf@cz@fBsC~DkErMsMjLaLbCgCj@c@PU|BqB|F{F|ByAzDsBvH}C\\IfAUhGy@rDg@fBc@hEyCz@y@|CcDbH_Ix@u@`CmCzBkCr@cAtAcCtCkGfA_C|AaElE}LnFiOdDaJnCeHf@eCLuADgAAkBxB?p@EPeBB_K?eYDeG?cPAiG?eFeECeKFoL?w@KQEkAg@[c@sJ}NcA}AEM@YFMb@g@FM?]KWcB}BGGI?KFq@bA",
                          "stops": [
                            {
                              "global_stop_id": "109:62490",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.60760616582932,
                              "stop_lon": -90.1054404963789,
                              "stop_name": "State / 47th Street EB"
                            },
                            {
                              "global_stop_id": "109:62491",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.607246437695125,
                              "stop_lon": -90.10387567899514,
                              "stop_name": "State / 49th Street EB"
                            },
                            {
                              "global_stop_id": "109:62492",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.606724831900536,
                              "stop_lon": -90.10151945971616,
                              "stop_name": "State / 51st Street EB"
                            }
                          ]
                        },
                        {
                          "direction_headsign": "Belleville Sta via Fairview Hgts Sta",
                          "direction_id": 1,
                          "headsign": "Fairview Hgts Sta Only",
                          "shape": "w|vjF`fhePh@lAPBTCPQrAkBzBlDgEnFoA|A{@tAeBjByAsEsNu_@EsCnEgGfAmAzEcGnCgDnCoDh@k@xAmHtKob@hGwVrD}MfAoEjAmExB{I`E{O\\aB~AiGf@}A^yA`@mAb@u@lBsE|@eC~A}DdOg]zEkKfBoD~EcKHYp@yKNcC^mEPkBt@_GjBkNp@eEf@oEzAyKx@uGLq@`CiO^gBt@kCf@kAt@qAj@}AjC{S|AwMv@oE\\sBpAuKnA{EjEwOdBmGt@aD@Wf@sBp@kBzGeOzCeGfBeE`NgVtJmQp@wA`AyAdIwOvBcEPa@tAgCdFcKcAwBoAkBcAmAqJoJ}@u@}AiAmA}@wBkAyMeGsDyAoAk@yBm@kFcBmCoASUQSM]?_@Hq@LYPQPEX?R?zDxAFQjBqDRQjCcEdA{Bt@qBb@}AbBjAZPX?vG_E",
                          "stops": [
                            {
                              "global_stop_id": "109:62455",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62501700752446,
                              "stop_lon": -90.15905797478099,
                              "stop_name": "5th / Missouri Loop / MetroLink"
                            },
                            {
                              "global_stop_id": "109:62456",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62393782312187,
                              "stop_lon": -90.16037098247081,
                              "stop_name": "503 River Park NB"
                            },
                            {
                              "global_stop_id": "109:62457",
                              "location_type": 0,
                              "parent_station_global_stop_id": null,
                              "route_type": 3,
                              "stop_lat": 38.62527781042176,
                              "stop_lon": -90.16198076587133,
                              "stop_name": "River Park / 4th Street NB"
                            }
                          ]
                        }
                      ],
                      "route": {
                        "compact_display_short_name": {
                          "boxed_text": "",
                          "elements": [
                            null,
                            "48",
                            null
                          ],
                          "route_name_redundancy": false
                        },
                        "fares": [
                          {
                            "fare_media_type": 1,
                            "price_min": {
                              "currency_code": "USD",
                              "symbol": "$",
                              "text": "$2,5",
                              "value": 2.5
                            },
                            "price_max": {
                              "currency_code": "USD",
                              "symbol": "$",
                              "text": "$3,5",
                              "value": 3.5
                            }
                          }
                        ],
                        "global_route_id": "109:58413",
                        "real_time_route_id": "17186",
                        "route_color": "0093dc",
                        "route_long_name": "Main Street - State Street",
                        "route_short_name": "1",
                        "route_text_color": "ffffff",
                        "route_type": 3,
                        "sorting_key": "1",
                        "tts_long_name": "Main Street - State Street",
                        "tts_short_name": "1"
                      }
                    }
                  },
                  "properties": {
                    "itineraries": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "$ref": "#/components/schemas/ItineraryDetail"
                      }
                    },
                    "route": {
                      "$ref": "#/components/schemas/Route"
                    }
                  },
                  "required": [
                    "itineraries",
                    "route"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Unknown route"
          }
        },
        "operationId": "/public/route_details",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "global_route_id",
            "description": "Global route id provided by other endpoint on which more detail is requested. ",
            "required": true
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "schema": {
              "type": "boolean",
              "default": false
            },
            "in": "query",
            "name": "include_next_departure",
            "description": "If set to true, will make the stop list include the next departure for each stop. "
          }
        ]
      }
    },
    "/public/routes_for_networks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "routes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Route"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unknown network"
          }
        },
        "operationId": "/public/routes_for_networks",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "BC Transit West Kootenay|West Kootenay"
            },
            "in": "query",
            "name": "network_ids",
            "description": "List of comma seperated Network IDs provided from [`/public/available_networks`](#operation/get-public-available_networks)"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lat",
            "description": "Any lat of a location that serves that network. If provided, the performance of this call will be improved. "
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Any lon of a location that serves that network. If provided, the performance of this call will be improved. "
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "include_itineraries",
            "description": "If set to true, the response will include itineraries detail for the listed routes. "
          }
        ],
        "description": "Return all the routes for a list of given networks."
      },
      "parameters": []
    },
    "/public/stops_for_network": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stops": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Stop"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unknown network"
          }
        },
        "operationId": "/public/stops_for_network",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "BC Transit West Kootenay|West Kootenay"
            },
            "in": "query",
            "name": "network_id",
            "description": "Network ID or Network Location provided from [`/public/available_networks`](#operation/get-public-available_networks)"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lat",
            "description": "Any lat of a location that serves that network. If provided, the performance of this call will be improved. "
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Any lon of a location that serves that network. If provided, the performance of this call will be improved. "
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "description": "Return all the stops for a given network."
      },
      "parameters": []
    },
    "/public/alerts_for_networks": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ServiceAlert"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unknown network"
          }
        },
        "operationId": "/public/alerts_for_networks",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "BC Transit West Kootenay|West Kootenay"
            },
            "in": "query",
            "name": "network_ids",
            "description": "List of comma separated Network IDs provided from [`/public/available_networks`](#operation/get-public-available_networks)"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lat",
            "description": "Any lat of a location that serves that network. If provided, the performance of this call will be improved."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Any lon of a location that serves that network. If provided, the performance of this call will be improved."
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ],
        "description": "Return all active service alerts affecting routes in the specified networks. Each alert includes detailed information about affected routes, stops, and trips."
      },
      "parameters": []
    },
    "/public/latest_update_for_network": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "time": {
                      "type": "integer",
                      "description": "UNIX time in seconds"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unknown network"
          }
        },
        "operationId": "/public/latest_update_for_network",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "BC Transit West Kootenay|West Kootenay"
            },
            "in": "query",
            "name": "network_id",
            "description": "Network ID or Network Location provided from [`/public/available_networks`](#operation/get-public-available_networks)"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lat",
            "description": "Any lat of a location that serves that network. If provided, the performance of this call will be improved. "
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Any lon of a location that serves that network. If provided, the performance of this call will be improved. "
          }
        ],
        "description": "Return the time of the most recent data update for a given network ID or network location"
      },
      "parameters": []
    },
    "/public/search_stops": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "results": [
                        {
                          "global_stop_id": "1:104357",
                          "location_type": 0,
                          "match_strength": 0.8355908393859863,
                          "parent_station_global_stop_id": "1:87716",
                          "route_type": 1,
                          "stop_lat": 45.51103187756334,
                          "stop_lon": -73.56489806950306,
                          "stop_name": "Station Saint-Laurent"
                        },
                        {
                          "global_stop_id": "162:4406",
                          "location_type": 0,
                          "match_strength": 0.4338989555835724,
                          "parent_station_global_stop_id": "162:3878",
                          "route_type": 3,
                          "stop_lat": 45.32175192655215,
                          "stop_lon": -73.26385958040017,
                          "stop_name": "Saint-Laurent"
                        },
                        {
                          "global_stop_id": "162:4355",
                          "location_type": 0,
                          "match_strength": 0.4338989555835724,
                          "parent_station_global_stop_id": "162:3878",
                          "route_type": 3,
                          "stop_lat": 45.32170696053537,
                          "stop_lon": -73.26430924056791,
                          "stop_name": "Saint-Laurent"
                        }
                      ]
                    }
                  },
                  "properties": {
                    "results": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "global_stop_id": {
                            "$ref": "#/components/schemas/GlobalStopId"
                          },
                          "location_type": {
                            "$ref": "#/components/schemas/LocationType"
                          },
                          "match_strength": {
                            "type": "number",
                            "description": "Higher numbers indicate better matches for the search term",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "parent_station_global_stop_id": {
                            "$ref": "#/components/schemas/GlobalStopId"
                          },
                          "route_type": {
                            "$ref": "#/components/schemas/RouteType"
                          },
                          "stop_lat": {
                            "type": "number",
                            "format": "double",
                            "description": "Latitude of the stop"
                          },
                          "stop_lon": {
                            "type": "number",
                            "default": 0,
                            "format": "double",
                            "description": "Longitude of the stop"
                          },
                          "stop_name": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Stop name from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)"
                          }
                        },
                        "required": [
                          "global_stop_id",
                          "location_type",
                          "match_strength",
                          "parent_station_global_stop_id",
                          "route_type",
                          "stop_lat",
                          "stop_lon",
                          "stop_name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "results"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "lat, lon or query are missing"
          }
        },
        "operationId": "/public/search_stops",
        "description": "Given coordinates of an approximate area to search, find transit stops whose names or stop codes match the given search term, from feeds which serve the search area.",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lat",
            "description": "Latitude of the approximate area of the search."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lon",
            "description": "Longitude of the approximate area of the search."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "query",
            "description": "Search term. Will be matched against the `stop_name` and `stop_code` of potential stops from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)."
          },
          {
            "$ref": "#/components/parameters/PickupDropoffFilter"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "in": "query",
            "name": "max_num_results",
            "description": "Maximum number of results to return. If there are few matches, less results than requested will be returned."
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    },
    "/public/trip_details": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "route": {
                        "compact_display_short_name": {
                          "boxed_text": "",
                          "elements": [
                            null,
                            "20",
                            null
                          ],
                          "route_name_redundancy": false
                        },
                        "fares": [
                          {
                            "fare_media_type": 1,
                            "price_min": {
                              "currency_code": "USD",
                              "symbol": "$",
                              "text": "$2.5",
                              "value": 2.5
                            },
                            "price_max": {
                              "currency_code": "USD",
                              "symbol": "$",
                              "text": "$2.5",
                              "value": 3.5
                            }
                          }
                        ],
                        "global_route_id": "BCTWK:121958",
                        "real_time_route_id": "20",
                        "route_color": "01233f",
                        "route_display_short_name": {
                          "boxed_text": "",
                          "elements": [
                            null,
                            "20",
                            null
                          ],
                          "route_name_redundancy": false
                        },
                        "route_long_name": "Slocan Valley",
                        "route_short_name": "20",
                        "route_text_color": "ffffff",
                        "route_type": 3,
                        "sorting_key": "20",
                        "tts_long_name": "Slocan Valley",
                        "tts_short_name": "20"
                      },
                      "rt_trip_id": "2201377-WKT2109-2",
                      "schedule_items": [
                        {
                          "departure_time": 1648255920,
                          "stop": {
                            "global_stop_id": "BCTWK:3799",
                            "location_type": 0,
                            "parent_station_global_stop_id": null,
                            "route_type": 3,
                            "rt_stop_id": "160468",
                            "stop_code": "160468",
                            "stop_lat": 49.44162831547864,
                            "stop_lon": -117.5389825005057,
                            "stop_name": "Osachoff / White",
                            "wheelchair_boarding": 0
                          }
                        },
                        {
                          "departure_time": 1648256040,
                          "stop": {
                            "global_stop_id": "BCTWK:3800",
                            "location_type": 0,
                            "parent_station_global_stop_id": null,
                            "route_type": 3,
                            "rt_stop_id": "160518",
                            "stop_code": "160518",
                            "stop_lat": 49.45054058000337,
                            "stop_lon": -117.5591362692241,
                            "stop_name": "Hwy 6 / 1300 Block",
                            "wheelchair_boarding": 0
                          }
                        },
                        {
                          "departure_time": 1648257480,
                          "stop": {
                            "global_stop_id": "BCTWK:3811",
                            "location_type": 0,
                            "parent_station_global_stop_id": null,
                            "route_type": 3,
                            "rt_stop_id": "160565",
                            "stop_code": "160565",
                            "stop_lat": 49.61619538580116,
                            "stop_lon": -117.5663488183147,
                            "stop_name": "Slocan River / Winlaw Bridge",
                            "wheelchair_boarding": 0
                          }
                        },
                        {
                          "departure_time": 1648259280,
                          "stop": {
                            "global_stop_id": "BCTWK:3827",
                            "location_type": 0,
                            "parent_station_global_stop_id": null,
                            "route_type": 3,
                            "rt_stop_id": "160208",
                            "stop_code": "160208",
                            "stop_lat": 49.76330620628109,
                            "stop_lon": -117.469689868656,
                            "stop_name": "Harold St / Giffin",
                            "wheelchair_boarding": 0
                          }
                        }
                      ]
                    }
                  },
                  "properties": {
                    "route": {
                      "$ref": "#/components/schemas/Route"
                    },
                    "rt_trip_id": {
                      "type": "string",
                      "minLength": 1,
                      "description": "A identifier for that trip. In the majority of cases, it will be the same `trip_id` found from the original GTFS. Note that two departures can have the same `rt_trip_id` if one of them has been duplicated by real time data. Can be empty string if no trip id is provided. "
                    },
                    "schedule_items": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "The departure time and information about each stop of the trip.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "departure_time": {
                            "type": "number",
                            "description": "Time of departure at this stop, in UNIX time in seconds."
                          },
                          "stop": {
                            "$ref": "#/components/schemas/Stop"
                          }
                        },
                        "required": [
                          "departure_time"
                        ]
                      }
                    }
                  },
                  "required": [
                    "route",
                    "rt_trip_id",
                    "schedule_items"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "route": {
                        "compact_display_short_name": {
                          "boxed_text": "string",
                          "elements": [
                            "string",
                            "string",
                            "string"
                          ],
                          "route_name_redundancy": "boolean"
                        },
                        "fares": [
                          {
                            "fare_media_type": "number",
                            "price_min": {
                              "currency_code": "string",
                              "symbol": "string",
                              "text": "string",
                              "value": "string"
                            },
                            "price_max": {
                              "currency_code": "string",
                              "symbol": "string",
                              "text": "string",
                              "value": "string"
                            }
                          }
                        ],
                        "global_route_id": "string",
                        "real_time_route_id": "string",
                        "route_color": "string",
                        "route_display_short_name": {
                          "boxed_text": "string",
                          "elements": [
                            "string",
                            "string",
                            "string"
                          ],
                          "route_name_redundancy": "boolean"
                        },
                        "route_long_name": "string",
                        "route_short_name": "string",
                        "route_text_color": "string",
                        "route_type": 0,
                        "sorting_key": "string",
                        "tts_long_name": "string",
                        "tts_short_name": "string"
                      },
                      "rt_trip_id": "string",
                      "schedule_items": [
                        {
                          "departure_time": 0,
                          "stop": {
                            "global_stop_id": "string",
                            "location_type": 0,
                            "parent_station_global_stop_id": null,
                            "route_type": 0,
                            "rt_stop_id": "string",
                            "stop_code": "string",
                            "stop_lat": 0,
                            "stop_lon": 0,
                            "stop_name": "string",
                            "wheelchair_boarding": 0
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "/public/trip_details",
        "description": "Provides scheduled times and stop information for an entire trip",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "trip_search_key",
            "required": true,
            "description": "A trip identifier obtained from other endpoints like `/v3/public/stop_departures`. This value will frequently change as feeds are updated and should be refetched regularly before use in further requests."
          },
          {
            "$ref": "#/components/parameters/Locale"
          },
          {
            "$ref": "#/components/parameters/Accept-Language"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "VehicleType": {
        "enum": [
          "electric-scooter",
          "scooter",
          "bike",
          "electric-bike"
        ],
        "type": "string"
      },
      "FloatingPlacemark": {
        "type": "object",
        "properties": {
          "title": {
            "description": "Human readable description of the vehicle",
            "type": "string",
            "example": "Electric Scooter"
          },
          "id": {
            "description": "External identifier from micromobility data provider",
            "type": "string",
            "example": "1104"
          },
          "networkName": {
            "description": "Name of the operator of the network (ie Lyft, CoGo)",
            "type": "string",
            "example": "LINK"
          },
          "networkId": {
            "description": "Unique identifier for the network (ie Lyft in Los Angeles, CoGo in Columbus)",
            "type": "number",
            "example": 1023
          },
          "color": {
            "description": "Main brand color of the network in hex format (no leading #)",
            "type": "string",
            "example": "E5FF01"
          },
          "textColor": {
            "description": "Contrasting color for use over the brand color in hex format (no leading #)",
            "type": "string",
            "example": "07000E"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of the vehicle",
            "example": 39.98675,
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the vehicle",
            "example": -83.00978,
            "format": "double"
          },
          "type": {
            "$ref": "#/components/schemas/VehicleType"
          }
        }
      },
      "StationPlacemark": {
        "type": "object",
        "properties": {
          "title": {
            "description": "Description of the location of the docking station (ie High St / Warren)",
            "type": "string"
          },
          "subtitle": {
            "description": "Human readable description of vehicles available",
            "type": "string",
            "example": "4 bikes - 1 ebikes - 11 docks"
          },
          "id": {
            "description": "External identifier from micromobility data provider",
            "type": "string",
            "example": "23"
          },
          "networkName": {
            "description": "Name of the operator of the network",
            "type": "string",
            "example": "CoGo"
          },
          "networkId": {
            "description": "Unique identifier for the network (ie Lyft in Los Angeles, CoGo in Columbus)",
            "type": "number",
            "example": 1023
          },
          "color": {
            "description": "Main brand color of the network in hex format (no leading #)",
            "type": "string",
            "example": "C23D42"
          },
          "textColor": {
            "description": "Contrasting color for use over the brand color in hex format (no leading #)",
            "type": "string",
            "example": "FFFFFF"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of the station",
            "example": 39.977479,
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of the station",
            "example": -83.0035065,
            "format": "double"
          },
          "type": {
            "enum": [
              "station"
            ]
          }
        }
      },
      "Stop": {
        "type": "object",
        "description": "A stop. Can be a routable stop or a station. ",
        "properties": {
          "distance": {
            "type": "number",
            "description": "Distance from the query point in meters. Not provided in `route_details` or when there's no location in the query. ",
            "example": 45
          },
          "global_stop_id": {
            "$ref": "#/components/schemas/GlobalStopId"
          },
          "location_type": {
            "type": "number",
            "example": 0,
            "description": "`location_types` from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt). The following values may be returned:\n\n* `0`: Routable stops (whether freestanding or located within a station)\n\n* `2`: Entrances to stations"
          },
          "parent_station_global_stop_id": {
            "type": "string",
            "description": "This field can be used to identify routable stops or entrances that are part of the same station. If applicable, this field contains a `GlobalStopId` referring to the containing station"
          },
          "parent_station": {
            "type": "object",
            "x-stoplight": {
              "id": "ambgoglhhm1gc"
            },
            "description": "The station in which the stop is in. If the stop is not inside a station, then nothing is provided. ",
            "properties": {
              "global_stop_id": {
                "$ref": "#/components/schemas/GlobalStopId",
                "x-stoplight": {
                  "id": "dj02ehiovm4ee"
                }
              },
              "location_type": {
                "type": "string",
                "x-stoplight": {
                  "id": "ia6rernwsse4f"
                },
                "description": "`location_types` from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt). Since this is a parent station, the type should be `1`."
              },
              "rt_stop_id": {
                "type": "string",
                "x-stoplight": {
                  "id": "k3nfddrr8r1wn"
                },
                "description": "A identifier for this stop. In the majority of cases, it will be the same `stop_id` found from the original GTFS. Can be an empty string if no stop id is provided. "
              },
              "station_code": {
                "type": "string",
                "x-stoplight": {
                  "id": "n3tz6otr95n15"
                },
                "description": "`stop_code` of the stop, from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt) for this station. \n"
              },
              "station_name": {
                "type": "string",
                "x-stoplight": {
                  "id": "qdim682vddrwu"
                },
                "description": "Stop name from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)'"
              }
            }
          },
          "route_type": {
            "type": "integer",
            "description": "For routable stops, route type from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt)"
          },
          "stop_lat": {
            "type": "number",
            "example": 45.526168077787894,
            "format": "double"
          },
          "stop_lon": {
            "type": "number",
            "example": -73.59506067289408,
            "format": "double"
          },
          "stop_name": {
            "type": "string",
            "minLength": 1,
            "example": "De Gaspé / Maguire",
            "description": "Stop name from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)'"
          },
          "stop_code": {
            "type": "string",
            "description": "`stop_code` of the stop, from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)",
            "example": "51752"
          },
          "rt_stop_id": {
            "type": "string",
            "description": "A identifier for this stop. In the majority of cases, it will be the same `stop_id` found from the original GTFS. Can be an empty string if no stop id is provided. ",
            "example": "51752"
          },
          "wheelchair_boarding": {
            "type": "integer",
            "description": "`wheelchair_boarding` of the stop, from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)",
            "enum": [
              0,
              1,
              2
            ],
            "example": 1
          }
        },
        "required": [
          "global_stop_id",
          "location_type",
          "stop_lat",
          "stop_lon",
          "stop_name"
        ]
      },
      "GlobalStopId": {
        "type": "string",
        "title": "GlobalStopId",
        "description": "A global stop id a string identifier that identifies a stop across all of Transit's data. On a best-effort basis, the id will not change even across GTFS updates. ",
        "example": "1:94380"
      },
      "BaseScheduleItem": {
        "description": "Base schema for schedule item properties shared across different contexts",
        "type": "object",
        "properties": {
          "departure_time": {
            "type": "number",
            "description": "Departure time of the schedule item in UNIX time.  If `is_real_time` is false, it will be equal to `scheduled_departure_time`. ",
            "example": 1614372300
          },
          "is_cancelled": {
            "type": "boolean",
            "description": "If this departure has been cancelled. Cancelled departures should either be crossed of or not shown at all in a UI. "
          },
          "is_real_time": {
            "type": "boolean",
            "description": "If the departure_time is based on real time data. "
          },
          "rt_trip_id": {
            "type": "string",
            "description": "A identifier for that trip. In the majority of cases, it will be the same `trip_id` found from the original GTFS. Note that two departures can have the same `rt_trip_id` if one of them has been duplicated by real time data. Can be empty string if no trip id is provided. ",
            "example": "229201965"
          },
          "scheduled_departure_time": {
            "type": "number",
            "description": "Departure time based on schedule information in UNIX time.",
            "example": 1614372300
          },
          "wheelchair_accessible": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "description": "`wheelchair_accessible` of the corresponding trip, from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#tripstxt)",
            "example": 1
          },
          "trip_search_key": {
            "$ref": "#/components/schemas/TripSearchKey"
          }
        },
        "required": [
          "departure_time",
          "is_cancelled",
          "is_real_time",
          "scheduled_departure_time"
        ]
      },
      "ScheduleItem": {
        "description": "The `plan_details` object will only be provided inside the `plan` call",
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseScheduleItem"
          },
          {
            "type": "object",
            "properties": {
              "plan_details": {
                "type": "object",
                "x-stoplight": {
                  "id": "ys42y2pio8yb9"
                },
                "properties": {
                  "internal_itinerary_id": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "dyh1yt1a4rkri"
                    },
                    "description": "The internal id of this departure that can be used to reference the itinerary used from the `route` array. "
                  },
                  "global_route_id": {
                    "$ref": "#/components/schemas/GlobalRouteId",
                    "x-stoplight": {
                      "id": "ulb0g4k15s1rx"
                    },
                    "description": "The global route id of this departure. "
                  },
                  "arrival_schedule_item": {
                    "$ref": "#/components/schemas/BaseScheduleItem",
                    "x-stoplight": {
                      "id": "r1wk7txv73wjd"
                    },
                    "description": "The schedule item for the arrival stop of this transit leg. In other words, you can use this schedule item to get the alighting time."
                  },
                  "continues_to": {
                    "type": "object",
                    "x-stoplight": {
                      "id": "vpqpvtv7ad3qj"
                    },
                    "description": "If an user continues stays inside a vehicle that changes assignation, this object will be filled with the continuation detail. More details about in-seat transfers can be found [here](https://gtfs.org/documentation/schedule/reference/#linked-trips).",
                    "properties": {
                      "internal_itinerary_id": {
                        "type": "string",
                        "x-stoplight": {
                          "id": "o8xfo42g0w6rr"
                        },
                        "description": "The internal id of this continued itinerary that can be used to reference the itinerary used from the `route` array. "
                      },
                      "global_route_id": {
                        "$ref": "#/components/schemas/GlobalRouteId",
                        "x-stoplight": {
                          "id": "8r8gcp9v8llfx"
                        },
                        "description": "The global route id of this continuated departure. "
                      }
                    }
                  },
                  "stop_schedule_items": {
                    "type": "array",
                    "description": "An array of schedule items for all intermediary stops within the effective transit leg range (from boarding stop to alighting stop). Each item includes stop-specific information and timing details.",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/BaseScheduleItem"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "global_stop_id": {
                              "$ref": "#/components/schemas/GlobalStopId",
                              "description": "The global stop identifier for this specific stop"
                            }
                          },
                          "required": [
                            "global_stop_id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Itinerary": {
        "type": "object",
        "description": "A group of trips that all have the same stop pattern and direction.\n\nThe `closest_stop` item is provided only when in the context of the `nearby_route` call. Otherwise, the list of `stops` is provide. \nThe `plan_details` item is provided only when in the context of `plan` call. ",
        "properties": {
          "direction_id": {
            "$ref": "#/components/schemas/DirectionId"
          },
          "headsign": {
            "type": "string",
            "minLength": 1,
            "description": "The headsign from the GTFS. If a stop_headsign is provided in the GTFS, it will be provided here. Refer to the [trip_headsign and stop_headsign](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#tripstxt) for more information. "
          },
          "direction_headsign": {
            "type": "string",
            "description": "Direction headsign that represent the overall direction of the trip. Ex : \"Northbound\". "
          },
          "merged_headsign": {
            "type": "string",
            "description": "Headsign merging both regular and direction headsign in a single string for display. Ex \"Northbound to downtown center\" when \"Northbound\" is the direction headsign and \"Downtown center\" is the regular headsign. "
          },
          "schedule_items": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/ScheduleItem"
            }
          },
          "branch_code": {
            "type": "string",
            "description": "Branch code for that itinerary. Branch are short string associated with an itinerary that represent version of the route. Ex : The 55 bus has 'A' and 'B' variant. If no branch are present, an empty string is provided. "
          },
          "closest_stop": {
            "$ref": "#/components/schemas/Stop"
          },
          "plan_details": {
            "type": "object",
            "x-stoplight": {
              "id": "58z9q9dqlc1jp"
            },
            "description": "Plan details is only avialable from the `plan` call and gives context inside the trip plan result. ",
            "properties": {
              "start_stop_offset": {
                "type": "integer",
                "x-stoplight": {
                  "id": "hwgqefkhm4w08"
                },
                "description": "The index of the stop where the leg starts. Use the `stops` list to access the stop itself. "
              },
              "end_stop_offset": {
                "type": "integer",
                "x-stoplight": {
                  "id": "41fe6ihlwwknl"
                },
                "description": "The index of the stop where the leg ends. Use the `stops` list to access the stop itself. This value can be `-1` in the case where the leg continues to a different leg, see `continues_to` value in the `plan_details` inside `ScheduleItem`."
              },
              "plan_shape": {
                "type": "string",
                "x-stoplight": {
                  "id": "hiwcmbu6e42it"
                },
                "description": "The `encoded_polyline` shape of the specific itinerary inside the leg (i.e. between `start_stop_offset` and `end_stop_offset`)"
              },
              "internal_itinerary_id": {
                "type": "string",
                "x-stoplight": {
                  "id": "pl5ynel2xisti"
                },
                "description": "Unique id that can be used to reference the itineraries from the list of departures."
              }
            }
          },
          "stops": {
            "type": "array",
            "x-stoplight": {
              "id": "ivqk3kjlaxab9"
            },
            "description": "List of stops of this itinerary",
            "items": {
              "$ref": "#/components/schemas/Stop",
              "x-stoplight": {
                "id": "ebok4mxp1e73a"
              }
            }
          }
        },
        "required": [
          "direction_id",
          "headsign"
        ]
      },
      "Route": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "compact_display_short_name": {
              "boxed_text": "",
              "elements": [
                null,
                "46",
                null
              ],
              "route_name_redundancy": false
            },
            "fares": [
              {
                "fare_media_type": 1,
                "price_min": {
                  "currency_code": "CAD",
                  "symbol": "$",
                  "text": "2,5$",
                  "value": 2.5
                },
                "price_max": {
                  "currency_code": "CAD",
                  "symbol": "$",
                  "text": "3,5$",
                  "value": 3.5
                }
              }
            ],
            "global_route_id": "STM:897",
            "itineraries": [
              {
                "direction_id": 0,
                "headsign": "string",
                "schedule_items": [
                  {
                    "departure_time": 1614372300,
                    "is_cancelled": true,
                    "is_real_time": true,
                    "rt_trip_id": "229201965",
                    "scheduled_departure_time": 1614372300,
                    "wheelchair_accessible": 1,
                    "trip_search_key": "BCTWK:38359648:33:28:1"
                  }
                ],
                "branch_code": "string"
              }
            ],
            "real_time_route_id": "46",
            "route_color": "000000",
            "route_display_short_name": {
              "boxed_text": "",
              "elements": [
                null,
                "46",
                null
              ],
              "route_name_redundancy": false
            },
            "route_long_name": "Casgrain",
            "route_mode_name": "Bus",
            "route_network_name": "STM",
            "route_network_id": "STM|Montreal",
            "route_short_name": "46",
            "route_text_color": "FFFFFF",
            "route_type": 0,
            "sorting_key": "46",
            "tts_long_name": "46",
            "tts_short_name": "46"
          }
        },
        "properties": {
          "alerts": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 0,
            "description": "Service alerts that affect this route. For the /public/plan endpoint, only alerts that impact the returned trip plan are included.",
            "items": {
              "$ref": "#/components/schemas/ServiceAlert"
            }
          },
          "global_route_id": {
            "$ref": "#/components/schemas/GlobalRouteId"
          },
          "itineraries": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "description": "Itineraries will be provided in /nearby_stops but not /routes_for_networks, /route_details, or /trip_details",
            "items": {
              "$ref": "#/components/schemas/Itinerary"
            }
          },
          "route_long_name": {
            "type": "string",
            "description": "[`route_long_name`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt) from the GTFS",
            "example": "Casgrain"
          },
          "route_short_name": {
            "type": "string",
            "description": "[`route_short_name`](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt) from the GTFS",
            "example": "46"
          },
          "route_timezone": {
            "type": "string",
            "description": "The timezone of the route. This is the timezone of the GTFS feed, ideally time from this route should be in the same timezone.",
            "example": "America/Toronto"
          },
          "route_display_short_name": {
            "$ref": "#/components/schemas/DisplayShortName",
            "description": "Extended visual identity"
          },
          "compact_display_short_name": {
            "$ref": "#/components/schemas/DisplayShortName",
            "description": "Shortened visual identity, previously called timebar_display_short_name"
          },
          "fares": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Fare"
            }
          },
          "route_type": {
            "type": "integer",
            "description": "Route type as defined in [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt)"
          },
          "route_color": {
            "type": "string",
            "description": "Route color as defined in [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt)"
          },
          "route_text_color": {
            "type": "string",
            "description": "Route text color as defined in [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt)"
          },
          "route_network_name": {
            "type": "string",
            "description": "The network name associated with that route. A network name is a user-presentable string that represent the branding of the route.\n\nIt is not exactly the agency as sometime the branding will be slighly different even within the same agency. For example, `network_name` will be different for local bus and commuter bus in Baltimore since they are handled as two different networks on the user's perspective even if operated by the same agency.\n\nNetwork name should be unique inside a metropolitian region but can be reused across regions. For example \"MTA\" will be used for both MTA in NYC and MTA in Baltimore. For an unique value, please use `route_network_id`."
          },
          "route_network_id": {
            "type": "string",
            "description": "A global unique identifier for the network. The network id will be constant on a best-effort basis and can change when network redesign and other major changes happens.\n\nFor more detail about network, please refer to `route_network_name`."
          },
          "tts_long_name": {
            "type": "string",
            "description": "Long name for the route suitable to be used in a text-to-speech context. Not suitable for display. "
          },
          "tts_short_name": {
            "type": "string",
            "description": "Short name for the route suitable to be used in a text-to-speech context. Not suitable for display. "
          },
          "sorting_key": {
            "type": "string",
            "description": "If routes need to be sorted in the usual order they are shown in, sorting should be based of this key.\n\nFor example, Lettered MTA Subway routes are usually shown in the following order : 'A', 'C', 'E', 'B', 'D', etc. The short name is not suitable for sorting in this case so the `sorting_key` should be used."
          },
          "mode_name": {
            "type": "string",
            "description": "Mode name for the given route. A mode name is a human-readable string that more accurately represents what locals call the mode. Ex. : Subway in Montreal is called \"Metro\". "
          },
          "real_time_route_id": {
            "type": "string",
            "description": "Route id used for real time. In most case, it is the case id coming from the original GTFS. If no real time is present, `null` is provided.\n\nNot included in the `nearby_stops` call."
          },
          "vehicle": {
            "$ref": "#/components/schemas/Vehicle",
            "x-stoplight": {
              "id": "3j40ikyxgho0c"
            }
          }
        },
        "required": [
          "global_route_id",
          "route_long_name",
          "route_short_name",
          "route_type",
          "route_color",
          "route_text_color"
        ]
      },
      "ServiceAlert": {
        "type": "object",
        "description": "A service alert that affects transit operations",
        "properties": {
          "effect": {
            "type": "string",
            "description": "The type of effect this alert has on service, same as the `effect` field in the [GTFS-RT].",
            "enum": [
              "NO_SERVICE",
              "REDUCED_SERVICE",
              "SIGNIFICANT_DELAYS",
              "DETOUR",
              "ADDITIONAL_SERVICE",
              "MODIFIED_SERVICE",
              "OTHER_EFFECT",
              "UNKNOWN_EFFECT",
              "STOP_MOVED",
              "NO_EFFECT"
            ],
            "example": "NO_SERVICE"
          },
          "severity": {
            "type": "string",
            "description": "The severity level of the alert. Severe has the special meaning of \"service is suspended and has effect NO_SERVICE\", which is not the same as the GTFS-rt spec.",
            "enum": [
              "Info",
              "Warning",
              "Severe"
            ],
            "example": "Severe"
          },
          "title": {
            "type": "string",
            "description": "Optional short title for the alert, same as the `header_text` field in GTFS-RT.",
            "example": "Service disruption"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the alert, same as the `description_text` field in GTFS-RT.",
            "example": "Due to mechanical issues, service is suspended between Station A and Station B."
          },
          "created_at": {
            "type": "integer",
            "description": "Unix timestamp when the alert was created",
            "example": 1639584000
          },
          "informed_entities": {
            "type": "array",
            "description": "List of transit entities (routes, stops, trips) affected by this alert. As with GTFS-rt, one entity object should be considered as a logical AND with the properties of the entity. If more than one entity object is present, each of them should be considered as a logical OR.",
            "items": {
              "type": "object",
              "description": "A transit entity affected by the alert",
              "properties": {
                "global_route_id": {
                  "type": "string",
                  "$ref": "#/components/schemas/GlobalRouteId",
                  "description": "Global route identifier",
                  "example": "1|12345"
                },
                "global_stop_id": {
                  "$ref": "#/components/schemas/GlobalStopId",
                  "type": "string",
                  "description": "Global stop identifier in public API format (if alert affects specific stop)",
                  "example": "1|67890"
                },
                "rt_trip_id": {
                  "type": "string",
                  "description": "Real-time trip identifier (if alert affects specific trip), generally the same as the `trip_id` from the static GTFS.",
                  "example": "trip_123"
                }
              }
            }
          }
        },
        "required": [
          "effect",
          "severity",
          "description",
          "created_at",
          "informed_entities"
        ],
        "x-examples": {
          "example-1": {
            "effect": "NO_SERVICE",
            "severity": "Severe",
            "title": "Service disruption",
            "description": "Due to mechanical issues, service is suspended between Station A and Station B.",
            "created_at": 1639584000,
            "informed_entities": [
              {
                "global_route_id": "1|12345",
                "global_stop_id": "1|67890"
              }
            ]
          }
        }
      },
      "GlobalRouteId": {
        "type": "string",
        "title": "GlobalRouteId",
        "description": "A global route id a string identifier that identifies a route across all of Transit's data. As as best-effort basis, the id will not change even across GTFS update. ",
        "example": "1:897",
        "x-examples": {
          "example-1": "1:897"
        }
      },
      "ItineraryDetail": {
        "type": "object",
        "x-examples": {
          "example-1": {
            "direction_headsign": "5th / Mo via Fairview Hgts Sta",
            "direction_id": 0,
            "headsign": "5th / Mo via Fairview Hgts Sta",
            "shape": "_ubjFhaddPLKD?JBbB`CFPBVCPCFc@f@GLAXDLbA|ArJ|NZb@|Al@v@JnL?~DG@",
            "stops": [
              {
                "global_stop_id": "109:58970",
                "location_type": 0,
                "parent_station_global_stop_id": null,
                "route_type": 3,
                "stop_lat": 38.52170308738304,
                "stop_lon": -89.97461636717475,
                "stop_name": "Belleville Loop / MetroLink"
              },
              {
                "global_stop_id": "109:59040",
                "location_type": 0,
                "parent_station_global_stop_id": null,
                "route_type": 3,
                "stop_lat": 38.55687578436649,
                "stop_lon": -90.05342433376487,
                "stop_name": "Main / 74th Street WB"
              },
              {
                "global_stop_id": "109:59114",
                "location_type": 0,
                "parent_station_global_stop_id": null,
                "route_type": 3,
                "stop_lat": 38.62501700752446,
                "stop_lon": -90.15905797478099,
                "stop_name": "5th / Missouri Loop / MetroLink"
              }
            ]
          }
        },
        "properties": {
          "direction_headsign": {
            "type": "string",
            "minLength": 1,
            "description": "Direction headsign that represent the overall direction of the trip. Ex : \"Northbound\". "
          },
          "direction_id": {
            "$ref": "#/components/schemas/DirectionId"
          },
          "headsign": {
            "type": "string",
            "minLength": 1,
            "description": "The headsign from the GTFS. Refer to the [trip_headsign](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#tripstxt) for more information."
          },
          "merged_headsign": {
            "type": "string",
            "description": "Headsign merging both regular and direction headsign in a single string for display. Ex \"Northbound to downtown center\" when \"Northbound\" is the direction headsign and \"Downtown center\" is the regular headsign. "
          },
          "shape": {
            "type": "string",
            "minLength": 1,
            "description": "Shape provided in the [encoded polyline format](https://developers.google.com/maps/documentation/utilities/polylinealgorithm). If no shape is provided, null will be returned. "
          },
          "stops": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Stop"
            }
          },
          "next_departure": {
            "$ref": "#/components/schemas/ScheduleItem"
          },
          "canonical_itinerary": {
            "type": "boolean",
            "default": false,
            "description": "If true, it means that itinerary is considered one of the main itinerary for that route. If false, it's recommended to not show that itinerary in a context where all the itineraries are shown."
          },
          "is_active": {
            "type": "boolean",
            "description": "Set to True if there are any departure in the next 24h. "
          }
        },
        "required": [
          "direction_id",
          "headsign",
          "stops"
        ]
      },
      "VertexType": {
        "title": "VertexType",
        "type": "string",
        "enum": [
          "TRANSIT",
          "NORMAL"
        ],
        "description": "TRANSIT if the point is a public transit stop, NORMAL if it is any other kind of waypoint"
      },
      "DirectionId": {
        "title": "DirectionId",
        "type": "number",
        "description": "Direction id of the itinerary. In the majority of the cases, the direction id will be the original one from the GTFS. Please refer to [direction_id](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#tripstxt) from the GTFS spec for more information. "
      },
      "LocationType": {
        "type": "string",
        "title": "LocationType",
        "example": "0",
        "description": "Location type of a stop from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#stopstxt)"
      },
      "RouteType": {
        "title": "RouteType",
        "type": "string",
        "description": "Route type from the [GTFS](https://github.com/google/transit/blob/master/gtfs/spec/en/reference.md#routestxt)"
      },
      "NetworkId": {
        "type": "string",
        "title": "NetworkId",
        "description": "Identifies a given network of transit services",
        "x-examples": {},
        "example": "BC Transit West Kootenay|West Kootenay"
      },
      "TripSearchKey": {
        "type": "string",
        "title": "TripSearchKey",
        "description": "Used to obtain details for an entire trip. Will frequently change as GTFS feeds are updated, and so should be regularly refetched before use in further requests.",
        "example": "BCTWK:38359648:33:28:1"
      },
      "DisplayShortName": {
        "type": "object",
        "title": "DisplayShortName",
        "x-examples": {
          "example-1": {
            "elements": [
              "stm-metro",
              "",
              "stm-metro-2"
            ],
            "route_name_redundancy": false,
            "boxed_text": ""
          },
          "example-2": {
            "elements": [
              null,
              "55",
              null
            ],
            "route_name_redundancy": true,
            "boxed_text": ""
          }
        },
        "properties": {
          "elements": {
            "type": "array",
            "minItems": 3,
            "maxItems": 3,
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Array of exactly three elements.\n\nThe first and last element are nullable strings that refer to images intented to be on the left and right of\nthe textual element respectively. Images are refered by short identifiers which can be composed into full\nURLs by prefixing them with the static image base path (https://transitapp-data.com/images/svgx/), and\nsuffixing them with the desired image type and the '.svg' extension. The possible image types are:\n\n- `-mono`: Non-transparents shape should be tinted with the `route_text_color`.\n- `-color-light`: Shapes with color `#010101` should be tinted with the `route_color` and shapes with color\n  `#FEFEFE` should be tinted according to the `route_text_color`.\n- `-color-dark`: Same as `-color-light`, but designed for dark mode applications. Colors might need some\n  tweaking to preserve legibility.\n\nThe middle element is a textual element. It is non-nullable but may be empty.\n\n<details>\n  <summary>Example</summary>\n\n  Consider the display name elements:\n\n  ```json\n  [null, \"747\", \"stm-747-plane-v2\"]\n  ```\n\n  The first image (`null`) is to be ignored. The second image (`stm-747-plane-v2`), should resolve to the\n  following URL in light-mode applications:\n\n  https://transitapp-data.com/images/svgx/stm-747-plane-v2-color-light.svg\n\n  Along with the `boxed_text` value, this is expected to result in the following visual:\n\n  ![YUL](/docs/assets/examples/stm-747-display-name.png)\n</details>\n"
          },
          "route_name_redundancy": {
            "type": "bool",
            "description": "When true, the text contained in this DisplayShortName is redundant with the DisplayShortName’s images or\nthe route long name. In these cases, Transit recommends hiding the DisplayName text values if displaying\nthese two values side by side.\n"
          },
          "boxed_text": {
            "type": "string",
            "description": "Contains addionnal text to be shown in a colored box after the name. See the example given for the\n`elements` property.\n"
          }
        }
      },
      "Vehicle": {
        "title": "Vehicle",
        "x-stoplight": {
          "id": "jnil4t9syf9jf"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-stoplight": {
              "id": "1flxvefddgbf8"
            },
            "description": "Name of the vehicle. Will not be capitalized. "
          },
          "name_inflection": {
            "type": "string",
            "x-stoplight": {
              "id": "ej1s5vll7n2sv"
            },
            "description": "Inflection of the vehicle name, to provide the inflection to use in a sentence. Value can either be 'm' (masculine), 'f' (feminine) or 'n' (neutral). Not all langagues have all three inflections.\n\nFor example in French, 'train' is masculine, 'gondole' is feminine. In a sentence, you would say 'Prenez le train' or 'Prenez la gondole'.\n"
          },
          "image": {
            "type": "string",
            "x-stoplight": {
              "id": "3l1pjkaj5ub61"
            },
            "description": "Image slug to be displayed for the particuliar vehicle type. See DisplayShortName type for details. "
          }
        }
      },
      "Fare": {
        "type": "object",
        "title": "Fare",
        "properties": {
          "fare_media_type": {
            "type": "number",
            "description": "The fare media type associated to the minimum and maximum prices. 0: None/Cash, 1: Physical paper ticket, 2: Physical transit card, 3: cEMV (contactless payment), 4: Mobile app. See: https://gtfs.org/documentation/schedule/reference/#fare_mediatxt"
          },
          "price_min": {
            "$ref": "#/components/schemas/Price"
          },
          "price_max": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "required": [
          "fare_media_type",
          "price_min",
          "price_max"
        ]
      },
      "Price": {
        "type": "object",
        "x-stoplight": {
          "id": "011153fbafe46"
        },
        "title": "Price",
        "properties": {
          "currency_code": {
            "type": "string",
            "description": "ISO 4217 currency code"
          },
          "symbol": {
            "type": "string",
            "description": "Currency symbol"
          },
          "text": {
            "type": "string",
            "description": "Formatted price with value and currency symbol"
          },
          "value": {
            "type": "number",
            "description": "Price value as a float"
          }
        },
        "required": [
          "currency_code",
          "symbol",
          "text",
          "value"
        ]
      },
      "LegMode": {
        "title": "LegMode",
        "x-stoplight": {
          "id": "by4zg7o04e7j7"
        },
        "type": "string",
        "enum": [
          "transit",
          "walk",
          "personal_bike",
          "microtransit",
          "shared_mobility"
        ],
        "description": "Mode of the current leg"
      },
      "SimpleLeg": {
        "title": "SimpleLeg",
        "x-stoplight": {
          "id": "rbkd4teldarje"
        },
        "type": "object",
        "description": "Simple leg, used for walk for personal_bike legs",
        "properties": {
          "leg_mode": {
            "x-stoplight": {
              "id": "ero0im0wsmgsx"
            },
            "type": "string",
            "enum": [
              "walk",
              "personal_bike"
            ],
            "description": "The mode of the current leg. In simple legs, it can be either walk or personal_bike."
          },
          "start_time": {
            "type": "integer",
            "x-stoplight": {
              "id": "qt0zfm4tnkx5t"
            },
            "description": "The expected start time in unix time"
          },
          "end_time": {
            "type": "integer",
            "x-stoplight": {
              "id": "1fhv6j6ed2kla"
            },
            "description": "The expected end time in unix time"
          },
          "duration": {
            "type": "integer",
            "x-stoplight": {
              "id": "o8zoc0ok3cikx"
            },
            "description": "Travel duration in seconds"
          },
          "distance": {
            "type": "integer",
            "x-stoplight": {
              "id": "c36y29j88bf8l"
            },
            "description": "Total distance traveled of the leg"
          },
          "polyline": {
            "type": "string",
            "x-stoplight": {
              "id": "r6n8lvfdx6bq2"
            },
            "description": "Shape of the traveled path provided in the [encoded polyline format](https://developers.google.com/maps/documentation/utilities/polylinealgorithm).\n                          "
          }
        }
      },
      "MicrotransitLeg": {
        "title": "MicrotransitLeg",
        "x-stoplight": {
          "id": "5r68hbatz677b"
        },
        "type": "object",
        "description": "Leg used for microtransit",
        "properties": {
          "leg_mode": {
            "x-stoplight": {
              "id": "ero0im0wsmgsx"
            },
            "type": "string",
            "enum": [
              "microtransit"
            ],
            "description": "The mode of the current leg. In a microtransit leg, it will always be 'microtransit'. "
          },
          "start_time": {
            "type": "integer",
            "x-stoplight": {
              "id": "qt0zfm4tnkx5t"
            },
            "description": "The expected start time in unix time"
          },
          "end_time": {
            "type": "integer",
            "x-stoplight": {
              "id": "1fhv6j6ed2kla"
            },
            "description": "The expected end time in unix time"
          },
          "duration": {
            "type": "integer",
            "x-stoplight": {
              "id": "o8zoc0ok3cikx"
            },
            "description": "Travel duration in seconds"
          },
          "product_price": {
            "type": "object",
            "x-stoplight": {
              "id": "fjvdiiysvyfat"
            },
            "description": "The object specifing the price of the microtransit leg. Pricing details are not always available.",
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of princing. Possible values are \n - 'Metered': the pricing is based on a meter inside the vehicle\n - 'Price': the pricing is defined in the `low_price` and `high_price` values in the pricing object.\n",
                "x-stoplight": {
                  "id": "3qecf97ezcz78"
                },
                "enum": [
                  "Metered",
                  "Price"
                ]
              },
              "low_price": {
                "$ref": "#/components/schemas/Price",
                "x-stoplight": {
                  "id": "0c4ma7cschpfk"
                },
                "description": "Lower possible price of the trip, can be null if not avaialble. "
              },
              "high_price": {
                "$ref": "#/components/schemas/Price",
                "x-stoplight": {
                  "id": "4nm02hefi5stm"
                },
                "description": "Higher possible price of the trip, can be null if not avaialble. "
              }
            },
            "required": [
              "type"
            ]
          },
          "product_id": {
            "type": "string",
            "x-stoplight": {
              "id": "pibb7pgi0eeiu"
            },
            "description": "Unique identifier of the microtransit product"
          },
          "product_name": {
            "type": "string",
            "x-stoplight": {
              "id": "a7vdis8n7o3hr"
            },
            "description": "Refers to the product name of the microtransit service. Usually, for microtransit, the product and service names are the same. However, they might differ if one microtransit provider offers multiple services under different brand names (for instance, one service using vans and another using cars)."
          },
          "product_service_name": {
            "type": "string",
            "x-stoplight": {
              "id": "0krnn2lbd2rav"
            },
            "description": "Refers to the service name of the microtransit service. Usually, for microtransit, the product and service names are the same. However, they might differ if one microtransit provider offers multiple services under different brand names (for instance, one service using vans and another using cars)."
          },
          "product_color": {
            "type": "string",
            "x-stoplight": {
              "id": "w0pc2mlls1ne9"
            },
            "description": "Hex-encoded color that should be used to represent the product. "
          },
          "product_text_color": {
            "type": "string",
            "x-stoplight": {
              "id": "2izlb86598szs"
            },
            "description": "Hex-encoded text color to use when product_color is the background color."
          },
          "product_logo_image": {
            "type": "string",
            "x-stoplight": {
              "id": "shzc0rir3f6eu"
            }
          },
          "product_icon_image": {
            "type": "string",
            "x-stoplight": {
              "id": "vv87v2urhke01"
            }
          }
        }
      },
      "SharedMobilityLeg": {
        "title": "SharedMobilityLeg",
        "type": "object",
        "description": "Leg used for shared mobility (bikeshare, dockless bikes, electric scooters)",
        "properties": {
          "leg_mode": {
            "type": "string",
            "enum": [
              "shared_mobility"
            ],
            "description": "The mode of the current leg. In a shared mobility leg, it will always be 'shared_mobility'."
          },
          "start_time": {
            "type": "integer",
            "description": "The expected start time in unix time"
          },
          "end_time": {
            "type": "integer",
            "description": "The expected end time in unix time"
          },
          "duration": {
            "type": "integer",
            "description": "Travel duration in seconds"
          },
          "distance": {
            "type": "number",
            "description": "Travel distance in meters"
          },
          "polyline": {
            "type": "string",
            "description": "Shape of the traveled path provided in the [encoded polyline format](https://developers.google.com/maps/documentation/utilities/polylinealgorithm)."
          },
          "shared_mobility_leg_detail": {
            "$ref": "#/components/schemas/SharedMobilityLegDetail",
            "description": "Detailed information about the shared mobility system and pickup/dropoff locations"
          },
          "sharing_system": {
            "$ref": "#/components/schemas/SharingSystemInfo",
            "description": "Information about the sharing system provider"
          },
          "service_color": {
            "type": "string",
            "description": "Hex color code for the sharing system brand"
          },
          "fare": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Price"
              },
              {
                "type": "null"
              }
            ],
            "description": "Fare for using the shared mobility service, can be null if not available"
          }
        },
        "required": [
          "leg_mode",
          "start_time",
          "end_time",
          "duration",
          "distance",
          "polyline",
          "service_name",
          "shared_mobility_leg_detail",
          "sharing_system"
        ]
      },
      "SharedMobilityLegDetail": {
        "title": "SharedMobilityLegDetail",
        "type": "object",
        "description": "Detailed information about shared mobility system usage and locations.\n\nThe schema supports three types of shared mobility systems with different properties:\n\n1. **docked_bikeshare**: Uses docking stations for pickup and drop-off\n   - Includes: `start_dock`, `end_dock`\n   - Excludes: `start_location`\n\n2. **dockless_bikeshare**: Free-floating bikes without docking stations\n   - Includes: `start_location`\n   - Excludes: `start_dock`, `end_dock`\n\n3. **scooters**: Free-floating scooters without docking stations\n   - Includes: `start_location`\n   - Excludes: `start_dock`, `end_dock`\n",
        "properties": {
          "system_type": {
            "type": "string",
            "enum": [
              "docked_bikeshare",
              "dockless_bikeshare",
              "scooters"
            ],
            "description": "Type of shared mobility system"
          },
          "start_dock": {
            "$ref": "#/components/schemas/SharedMobilityPlacemark",
            "description": "Information about the starting dock. Only present for `docked_bikeshare` system type."
          },
          "end_dock": {
            "$ref": "#/components/schemas/SharedMobilityPlacemark",
            "description": "Information about the ending dock. Only present for `docked_bikeshare` system type."
          },
          "start_location": {
            "$ref": "#/components/schemas/SharedMobilityPlacemark",
            "description": "Information about the pickup location. Only present for `dockless_bikeshare` and `scooters` system types."
          }
        },
        "required": [
          "system_type"
        ]
      },
      "SharingSystemInfo": {
        "title": "SharingSystemInfo",
        "type": "object",
        "description": "Information about the sharing system provider",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the sharing system (e.g., \"Citi Bike\", \"Bird\")"
          },
          "color": {
            "type": "string",
            "description": "Hex color code for the system's brand color"
          },
          "text_color": {
            "type": "string",
            "description": "Hex color code for text that should be displayed on the brand color"
          },
          "logo": {
            "type": "string",
            "description": "Logo image identifier/slug for the sharing system"
          },
          "app_icon": {
            "type": "string",
            "description": "App icon identifier/slug for the sharing system"
          }
        },
        "required": [
          "name"
        ]
      },
      "SharedMobilityPlacemark": {
        "title": "SharedMobilityPlacemark",
        "type": "object",
        "description": "Information about a shared mobility dock or pickup location",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the dock or location"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name of the dock or location"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude coordinate of the location"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude coordinate of the location"
          },
          "title": {
            "type": "string",
            "description": "Display title for the location"
          },
          "subtitle": {
            "type": "string",
            "description": "Additional display information for the location"
          },
          "level": {
            "type": "number",
            "format": "double",
            "description": "Availability level (0 = empty/no bikes, 1 = full/no docks available)"
          }
        },
        "required": [
          "id",
          "name",
          "latitude",
          "longitude",
          "title",
          "subtitle",
          "level"
        ]
      },
      "TransitLeg": {
        "title": "TransitLeg",
        "x-stoplight": {
          "id": "oplhdn58qlmth"
        },
        "type": "object",
        "description": "Leg used for transit legs",
        "properties": {
          "leg_mode": {
            "x-stoplight": {
              "id": "ero0im0wsmgsx"
            },
            "type": "string",
            "description": "The mode of the current leg. In a transit leg, it will always be 'transit'. "
          },
          "start_time": {
            "type": "integer",
            "description": "The expected start time in unix time"
          },
          "end_time": {
            "type": "integer",
            "description": "The expected end time in unix time"
          },
          "duration": {
            "type": "integer",
            "description": "Travel duration in seconds"
          },
          "departures": {
            "type": "array",
            "x-stoplight": {
              "id": "auvjv9f7n3fr7"
            },
            "description": "A list of departure options for the transit leg. Each departure contains a `plan_details` object for more context and a reference to the `routes` array.",
            "items": {
              "$ref": "#/components/schemas/ScheduleItem",
              "x-stoplight": {
                "id": "6uu7xng73yv4w"
              }
            }
          },
          "routes": {
            "type": "array",
            "x-stoplight": {
              "id": "9d6sf4gu7pms7"
            },
            "description": "Array of Route that can be used to travel that leg. The `plan_detail` object is provided inside the itineraries for details specific to the plan.",
            "items": {
              "$ref": "#/components/schemas/Route",
              "x-stoplight": {
                "id": "73gnnonbzc0t1"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "name": "apiKey",
        "type": "apiKey",
        "in": "header"
      }
    },
    "responses": {},
    "parameters": {
      "Latitude": {
        "name": "lat",
        "in": "query",
        "required": true,
        "schema": {
          "type": "number",
          "format": "double",
          "example": 45.526168
        },
        "description": "Latitude"
      },
      "Longitude": {
        "name": "lon",
        "in": "query",
        "required": true,
        "schema": {
          "type": "number",
          "format": "double",
          "example": -73.595061
        },
        "description": "Longitude"
      },
      "PickupDropoffFilter": {
        "name": "pickup_dropoff_filter",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "PickupAllowedOnly",
            "DropoffAllowedOnly",
            "Everything"
          ]
        },
        "description": "For routable stops, futher filter based on whether a rider can embark or disembark at this stop.\n* `PickupAllowedOnly`: Riders can board at this stop on at least one trip.\n* `DropoffAllowedOnly`: Riders can exit at this stop on at least one trip.\n* `Everything`: All stops.\n\nFor further reference, see the [GTFS pickup_type and drop_off_type fields](https://developers.google.com/transit/gtfs/reference#stop_timestxt).'\n"
      },
      "Locale": {
        "name": "locale",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "fr,en"
        },
        "description": "Names and other strings can translated into any of the supported languages of a feed. If not provided, the default language of the feed is selected. If the locale parameter is not provided, the Accept-Language header will be used as a fallback."
      },
      "Accept-Language": {
        "name": "Accept-Language",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string",
          "example": "fr,en"
        },
        "description": "Names and other strings can translated into any of the supported languages of a feed. If not provided, the default language of the feed is selected. This header is used as a fallback when the locale query parameter is not specified."
      }
    },
    "examples": {}
  },
  "servers": [
    {
      "url": "https://external.transitapp.com/v3",
      "description": "",
      "variables": {},
      "x-last-modified": 1614306184264
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ]
}